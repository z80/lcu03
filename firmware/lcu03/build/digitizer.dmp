
build/digitizer.elf:     file format elf32-littlearm
build/digitizer.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000111

Program Header:
    LOAD off    0x00008000 vaddr 0x08000000 paddr 0x08000000 align 2**15
         filesz 0x00005000 memsz 0x00005000 flags rwx
    LOAD off    0x00010800 vaddr 0x20000800 paddr 0x08005000 align 2**15
         filesz 0x000000d0 memsz 0x00001810 flags rw-
    LOAD off    0x00018000 vaddr 0x20000000 paddr 0x20000000 align 2**15
         filesz 0x00000000 memsz 0x00000800 flags rw-
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       000000ec  08000000  08000000  00008000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00004f10  080000f0  080000f0  000080f0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stacks       00000800  20000000  20000000  00018000  2**0
                  ALLOC
  3 .data         000000d0  20000800  08005000  00010800  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .bss          00001740  200008d0  080050d0  000108d0  2**3
                  ALLOC
  5 .debug_abbrev 00006bb4  00000000  00000000  000108d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0001f78c  00000000  00000000  00017484  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000bfd9  00000000  00000000  00036c10  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_pubnames 000020bc  00000000  00000000  00042be9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_pubtypes 00004ffb  00000000  00000000  00044ca5  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00001680  00000000  00000000  00049ca0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00001280  00000000  00000000  0004b320  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    0000445c  00000000  00000000  0004c5a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .comment      0000002a  00000000  00000000  000509fc  2**0
                  CONTENTS, READONLY
 14 .ARM.attributes 00000031  00000000  00000000  00050a26  2**0
                  CONTENTS, READONLY
 15 .debug_frame  00003b58  00000000  00000000  00050a58  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_loc    00004e87  00000000  00000000  000545b0  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
080000f0 l    d  .text	00000000 .text
20000000 l    d  .stacks	00000000 .stacks
20000800 l    d  .data	00000000 .data
200008d0 l    d  .bss	00000000 .bss
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_pubtypes	00000000 .debug_pubtypes
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 vectors.c
00000000 l    df *ABS*	00000000 crt0.c
00000000 l    df *ABS*	00000000 chcore.c
00000000 l    df *ABS*	00000000 chcore_v7m.c
0800034c l       .text	00000000 _port_exit_from_isr
00000000 l    df *ABS*	00000000 nvic.c
00000000 l    df *ABS*	00000000 chsys.c
20000990 l     O .bss	00000048 mainthread.4646
00000000 l    df *ABS*	00000000 chdebug.c
00000000 l    df *ABS*	00000000 chvt.c
00000000 l    df *ABS*	00000000 chschd.c
080009b0 l     F .text	00000022 fifo_remove
080009e0 l     F .text	00000020 dequeue
08000b20 l     F .text	0000007c wakeup
00000000 l    df *ABS*	00000000 chthreads.c
08000cf0 l     F .text	0000001a list_remove
00000000 l    df *ABS*	00000000 chmtx.c
08000fb0 l     F .text	00000046 prio_insert
08001000 l     F .text	00000022 fifo_remove
08001030 l     F .text	00000020 dequeue
00000000 l    df *ABS*	00000000 chevents.c
00000000 l    df *ABS*	00000000 chqueues.c
08001370 l     F .text	00000028 queue_insert
080013a0 l     F .text	00000022 fifo_remove
080013d0 l     F .text	00000040 qwait
00000000 l    df *ABS*	00000000 chmemcore.c
20000e1c l     O .bss	00000004 nextmem
20000e20 l     O .bss	00000004 endmem
00000000 l    df *ABS*	00000000 hal.c
00000000 l    df *ABS*	00000000 ext.c
00000000 l    df *ABS*	00000000 gpt.c
00000000 l    df *ABS*	00000000 i2c.c
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 serial.c
08001bb0 l     F .text	00000026 writes
08001be0 l     F .text	00000026 reads
08001c10 l     F .text	00000016 putwouldblock
08001c30 l     F .text	00000016 getwouldblock
08001c50 l     F .text	0000002a putt
08001c80 l     F .text	0000001e gett
08001ca0 l     F .text	00000026 writet
08001cd0 l     F .text	00000026 readt
08001d00 l     F .text	00000034 getflags
08004e50 l     O .text	00000024 vmt
00000000 l    df *ABS*	00000000 spi.c
00000000 l    df *ABS*	00000000 stm32_dma.c
20000e24 l     O .bss	00000004 dma_streams_mask
20000e28 l     O .bss	00000038 dma_isr_redir
00000000 l    df *ABS*	00000000 hal_lld.c
08002170 l     F .text	00000058 hal_lld_backup_domain_init
00000000 l    df *ABS*	00000000 ext_lld.c
00000000 l    df *ABS*	00000000 gpt_lld.c
080028d0 l     F .text	00000034 gpt_lld_serve_interrupt
00000000 l    df *ABS*	00000000 i2c_lld.c
08002980 l     F .text	00000180 i2c_lld_serve_event_interrupt
08002b00 l     F .text	000001f8 i2c_lld_serve_error_interrupt
00000000 l    df *ABS*	00000000 pwm_lld.c
08002d80 l     F .text	000000a2 serve_interrupt
00000000 l    df *ABS*	00000000 serial_lld.c
08004ee0 l     O .text	0000000c default_config
080030f0 l     F .text	00000088 usart_init
08003180 l     F .text	0000009c set_error
08003220 l     F .text	000001a2 serve_interrupt
080033d0 l     F .text	0000001c notify1
080033f0 l     F .text	0000001c notify2
00000000 l    df *ABS*	00000000 spi_lld.c
200017a4 l     O .bss	00000002 dummytx
00000000 l    df *ABS*	00000000 pal_lld.c
08004ef0 l     O .text	00000012 cfgtab.6086
00000000 l    df *ABS*	00000000 board.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 cpu_io.c
200017a8 l     O .bss	00000020 buffer
200017c8 l     O .bss	00000020 args
08004f50 l     O .text	0000000c serial_cfg
080038c0 l     F .text	00000064 process_command
200017e8 l     O .bss	00000001 slash.6517
200017ec l     O .bss	00000004 out_index.6518
08003930 l     F .text	00000040 exec_func
20000800 l     O .data	00000048 funcs
08003970 l     F .text	00000048 hardware_version
080039c0 l     F .text	00000050 firmware_version
08003a10 l     F .text	00000014 set_led
08003a30 l     F .text	00000042 set_dac1
08003a80 l     F .text	00000042 set_dac2
08003ad0 l     F .text	000000a8 get_adc
08003b80 l     F .text	0000001c set_osc_signals
08003ba0 l     F .text	0000004c set_osc_period
08003bf0 l     F .text	000000a0 get_osc_data
08003c90 l     F .text	00000042 get_temp
08003ce0 l     F .text	00000014 set_trigger_en
08003d00 l     F .text	00000066 set_sweep_range
08003d70 l     F .text	00000076 set_sweep_time
08003df0 l     F .text	00000014 set_sweep_en
08003e10 l     F .text	00000022 get_sweep_en
08003e40 l     F .text	000000a0 get_sweep_data
08003ee0 l     F .text	00000014 set_output
08003f00 l     F .text	00000048 firmware_upgrade
08003f50 l     F .text	00000040 writeResult
08003f90 l     F .text	00000018 writeEom
00000000 l    df *ABS*	00000000 led_ctrl.c
200017f0 l     O .bss	00000010 mutex
20001800 l     O .bss	00000004 value
20001808 l     O .bss	000001b0 waLeds
08003fb0 l     F .text	00000088 ledsThread
200019b8 l     O .bss	00000004 arg.6122
00000000 l    df *ABS*	00000000 sweep_ctrl.c
200019dc l     O .bss	00000010 swDacFrom
200019ec l     O .bss	00000010 swDacTo
200019fc l     O .bss	00000004 swPeriod
20001a00 l     O .bss	00000004 swElapsed
20001a04 l     O .bss	00000004 swNextPtTime
20001a08 l     O .bss	00000004 swPtsCnt
20001a0c l     O .bss	00000004 swPtIndex
20001a10 l     O .bss	00000001 swEnabled
00000000 l    df *ABS*	00000000 adc_ctrl.c
20000848 l     O .data	00000010 instantAdcData
00000000 l    df *ABS*	00000000 dac_ctrl.c
00000000 l    df *ABS*	00000000 temp_ctrl.c
20001a54 l     O .bss	00000010 mutex
20001a64 l     O .bss	00000002 temperature
00000000 l    df *ABS*	00000000 output_ctrl.c
00000000 l    df *ABS*	00000000 dfu_ctrl.c
080044a0 l     F .text	00000024 NVIC_SystemReset
00000000 l    df *ABS*	00000000 shutter_ctrl.c
20001a68 l     O .bss	000001b0 waShutter
080045b0 l     F .text	00000084 shutterThread
00000000 l    df *ABS*	00000000 moto_ctrl.c
20001c3c l     O .bss	00000018 motor
08004f60 l     O .text	000000a0 extcfg
080047b0 l     F .text	0000000a extHall0
080047d0 l     F .text	0000000a extPowerOff
080047c0 l     F .text	0000000a extHall1
20000870 l     O .data	00000030 pwmcfgMotor0
080047e0 l     F .text	00000008 pwmMotor0
200008a0 l     O .data	00000030 pwmcfgMotor1
080047f0 l     F .text	00000008 pwmMotor1
20001cb0 l     O .bss	000001b0 waMotor0
20001e60 l     O .bss	000001b0 waMotor1
080048d0 l     F .text	00000024 setMotoReset
080048a0 l     F .text	00000024 setMotoSleep
08004900 l     F .text	00000024 setMotoEnable
08004800 l     F .text	00000084 motor0Thread
08004890 l     F .text	00000006 motor1Thread
08004930 l     F .text	00000024 setMoto0Dir
00000000 l    df *ABS*	00000000 chlists.c
00000000 l    df *ABS*	00000000 chdynamic.c
00000000 l    df *ABS*	00000000 chregistry.c
00000000 l    df *ABS*	00000000 chsem.c
00000000 l    df *ABS*	00000000 chcond.c
00000000 l    df *ABS*	00000000 chmsg.c
00000000 l    df *ABS*	00000000 chmboxes.c
00000000 l    df *ABS*	00000000 chheap.c
00000000 l    df *ABS*	00000000 chmempools.c
00000000 l    df *ABS*	00000000 test.c
00000000 l    df *ABS*	00000000 testthd.c
00000000 l    df *ABS*	00000000 testsem.c
00000000 l    df *ABS*	00000000 testmtx.c
00000000 l    df *ABS*	00000000 testmsg.c
00000000 l    df *ABS*	00000000 testmbox.c
00000000 l    df *ABS*	00000000 testevt.c
00000000 l    df *ABS*	00000000 testheap.c
00000000 l    df *ABS*	00000000 testpools.c
00000000 l    df *ABS*	00000000 testdyn.c
00000000 l    df *ABS*	00000000 testqueues.c
00000000 l    df *ABS*	00000000 testbmk.c
00000000 l    df *ABS*	00000000 adc.c
00000000 l    df *ABS*	00000000 can.c
00000000 l    df *ABS*	00000000 icu.c
00000000 l    df *ABS*	00000000 mac.c
00000000 l    df *ABS*	00000000 pal.c
00000000 l    df *ABS*	00000000 sdc.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 usb.c
00000000 l    df *ABS*	00000000 tm.c
00000000 l    df *ABS*	00000000 mmc_spi.c
00000000 l    df *ABS*	00000000 serial_usb.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 adc_lld.c
00000000 l    df *ABS*	00000000 can_lld.c
00000000 l    df *ABS*	00000000 icu_lld.c
00000000 l    df *ABS*	00000000 mac_lld.c
00000000 l    df *ABS*	00000000 sdc_lld.c
00000000 l    df *ABS*	00000000 uart_lld.c
00000000 l    df *ABS*	00000000 usb_lld.c
00000000 l    df *ABS*	00000000 rtc_lld.c
00000000 l    df *ABS*	00000000 evtimer.c
00000000 l    df *ABS*	00000000 syscalls.c
00000000 l    df *ABS*	00000000 shell.c
00000000 l    df *ABS*	00000000 chprintf.c
00000000 l    df *ABS*	00000000 iwdg.c
00000000 l    df *ABS*	00000000 iwdg_lld.c
00000000 l    df *ABS*	00000000 timer_ctrl.c
00000000 l    df *ABS*	00000000 bpabi.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l       *ABS*	00000000 shift
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 strcasecmp.c
00000000 l    df *ABS*	00000000 strpbrk.c
00000000 l    df *ABS*	00000000 strspn.c
08004f10 g     O .text	0000003c pal_default_config
08002320 g     F .text	00000030 Vector58
080025b0 g     F .text	00000030 VectorE8
08002410 g     F .text	000000a4 Vector9C
08000390 g     F .text	00000094 nvicEnableVector
08000660 g     F .text	00000030 dbg_check_lock_from_isr
080012b0 g     F .text	00000070 chEvtSignalFlagsI
080001e0  w    F .text	00000002 VectorAC
08000f10 g     F .text	0000001c chThdExit
08000540 g     F .text	00000090 chSysTimerHandlerI
08001320 g     F .text	0000004c chEvtBroadcastFlagsI
08000ba0 g     F .text	00000060 chSchGoSleepTimeoutS
08001ae0 g     F .text	00000008 i2cInit
080010c0 g     F .text	00000108 chMtxLockS
08000600 g     F .text	00000030 dbg_check_lock
08002350 g     F .text	00000030 Vector5C
080027a0 g     F .text	000000a0 ext_lld_channel_enable
080001e0  w    F .text	00000002 NMIVector
08000db0 g     F .text	0000002a _thread_memfill
08004040 g     F .text	00000060 initLed
080044e0 g     F .text	00000074 shutterInit
080040d0 g     F .text	00000038 setSweepRange
08001ac0 g     F .text	00000018 gptObjectInit
08002100 g     F .text	00000064 dmaInit
080001e0  w    F .text	00000002 Vector8C
08001b40 g     F .text	00000070 pwmStart
080001e0  w    F .text	00000002 VectorDC
080041c0 g     F .text	00000030 setTrigEn
08000000 g     O startup	000000ec _vectors
080037f0 g     F .text	000000cc processCpuIo
08000ab0 g     F .text	00000070 chSchGoSleepS
08002ea0 g     F .text	00000250 pwm_lld_start
20000e60 g     O .bss	00000008 EXTD1
20000e78 g     O .bss	00000024 I2CD1
20002010 g       *ABS*	00000000 __heap_base__
08005000 g       *ABS*	00000000 _etext
08000de0 g     F .text	00000070 chThdCreateI
20001c74 g     O .bss	0000000c motor0_queue_buffer
080005d0 g     F .text	00000028 dbg_check_enable
080001e0  w    F .text	00000002 VectorC8
08002950 g     F .text	00000026 gpt_lld_stop_timer
08001a40 g     F .text	00000064 extChannelDisable
08000c00 g     F .text	0000007c chSchWakeupS
08001e20 g     F .text	0000007c sdIncomingDataI
08001760 g     F .text	00000082 chOQGetI
08004200 g     F .text	0000000c adcQueue
08000a00 g     F .text	00000034 _scheduler_init
08000e50 g     F .text	00000074 chThdCreateStatic
080001e0  w    F .text	00000002 Vector94
080001e0  w    F .text	00000002 VectorA8
08002e50 g     F .text	0000001c VectorB4
20001318 g     O .bss	00000454 SD2
08000a40 g     F .text	00000070 chSchReadyI
080000ec g       startup	00000000 __fini_array_end
080001f0  w    F .text	00000004 port_halt
20000800 g       .stacks	00000000 __main_thread_stack_end__
08000870 g     F .text	00000024 _vt_init
08001f70 g     F .text	00000048 Vector74
08001900 g     F .text	00000030 halInit
200008d0 g       .bss	00000000 _bss_start
080001e0  w    F .text	00000002 UsageFaultVector
20005000 g       *ABS*	00000000 __heap_end__
080001e0  w    F .text	00000002 DebugMonitorVector
08004130 g     F .text	00000048 setSweepEn
20000e68 g     O .bss	00000010 GPTD1
08000630 g     F .text	00000030 dbg_check_unlock
080001e0  w    F .text	00000002 Vector40
08004640 g     F .text	00000164 motorInit
08000110 g     F .text	000000d0 ResetHandler
08001590 g     F .text	000000e0 chIQReadTimeout
08002d00 g     F .text	0000001c VectorBC
08001960 g     F .text	00000068 extStart
08000260 g     F .text	00000040 _port_init
080021d0 g     F .text	00000090 hal_lld_init
08003520 g     F .text	00000080 spi_lld_init
08000f30 g     F .text	00000074 chThdExitS
08001940 g     F .text	00000018 extObjectInit
20001a34 g     O .bss	00000020 dac_queue
200009e0 g     O .bss	00000408 dbg_trace_buffer
080001e0  w    F .text	00000002 PendSVVector
080008a0 g     F .text	0000009c chVTSetI
080023b0 g     F .text	00000030 Vector64
20002010 g       .bss	00000000 _bss_end
20000de8 g     O .bss	00000004 dbg_panic_msg
20001ca0 g     O .bss	0000000c motor1_queue_buffer
08000100  w    F .text	00000002 _default_exit
08003650 g     F .text	000000e0 _pal_lld_setgroupmode
080001e0  w    F .text	00000002 VectorCC
20001c18 g     O .bss	00000020 sh_queue
08003450 g     F .text	00000044 sd_lld_init
080001e0  w    F .text	00000002 Vector54
080001e0  w    F .text	00000002 Vector98
08004240 g     F .text	00000040 instantAdcI
08003430 g     F .text	0000001c VectorD8
080001e0  w    F .text	00000002 Vector24
08000760 g     F .text	00000028 chDbgCheckClassI
08001090 g     F .text	00000028 chMtxLock
20001c38 g     O .bss	00000003 sh_queue_buffer
08000c80 g     F .text	00000064 chSchDoReschedule
20001a14 g     O .bss	00000020 adc_queue
080004b0 g     F .text	00000084 chSysInit
20001c80 g     O .bss	00000020 motor1_queue
08000ed0 g     F .text	0000003c chThdSleep
08001410 g     F .text	0000004c chIQInit
08004e80 g     O .text	00000054 _stm32_dma_streams
080020b0 g     F .text	00000048 Vector84
08001930 g     F .text	00000008 extInit
08000200 g     F .text	0000002c SysTickVector
08001eb0 g     F .text	00000018 spiObjectInit
2000176c g     O .bss	0000001c SPID1
200009d8 g     O .bss	00000004 dbg_isr_cnt
08002260 g     F .text	000000b4 stm32_clock_init
080035a0 g     F .text	000000a4 _pal_lld_init
08001d40 g     F .text	00000008 sdInit
080001e0  w    F .text	00000002 BusFaultVector
080001e0  w    F .text	00000002 VectorD0
080018d0 g     F .text	00000030 _core_init
08002e70 g     F .text	0000002c pwm_lld_init
08004210 g     F .text	00000028 instantAdc
20000e9c g     O .bss	00000014 PWMD2
08001dc0 g     F .text	00000060 sdStart
20000860 g     O .data	00000010 dacValues
080025e0 g     F .text	00000010 ext_lld_init
080001e0  w    F .text	00000002 VectorE4
08002d20 g     F .text	0000001c VectorC0
080044d0 g     F .text	00000008 firmwareUpgrade
08000350 g     F .text	00000014 _port_switch
00005000 g       *ABS*	00000000 __ram_size__
08000230 g     F .text	00000026 SVCallVector
080000f0  w    F .text	00000002 __late_init
08001ab0 g     F .text	00000008 gptInit
08000850 g     F .text	00000018 chDbgPanic
20000dec g     O .bss	00000010 vtlist
080001e0  w    F .text	00000002 HardFaultVector
080002a0 g     F .text	0000009c _port_irq_epilogue
080042e0 g     F .text	0000007c setDac
08000790 g     F .text	00000028 chDbgCheckClassS
080043c0 g     F .text	00000054 currentDacs
20001788 g     O .bss	0000001c SPID2
08001b10 g     F .text	00000008 pwmInit
08004420 g     F .text	00000028 lastTemp
08002930 g     F .text	00000018 gpt_lld_init
08004110 g     F .text	00000020 setSweepTime
08000710 g     F .text	00000044 dbg_check_leave_isr
08005000 g       *ABS*	00000000 _textdata
080024c0 g     F .text	000000bc VectorE0
00000000 g       *ABS*	00000000 _text
080001e0  w    F .text	00000002 MemManageVector
080000ec g       startup	00000000 __fini_array_start
08003750 g     F .text	00000050 main
08001ed0 g     F .text	00000044 Vector6C
08004360 g     F .text	0000002e setDac1
20000dfc g     O .bss	00000020 rlist
080001e0  w    F .text	00000002 VectorA0
080025f0 g     F .text	000001a8 ext_lld_start
08001ea0 g     F .text	00000008 spiInit
080006c0 g     F .text	00000044 dbg_check_enter_isr
080000ec g       startup	00000000 __init_array_end
080001e0  w    F .text	00000002 VectorC4
08002010 g     F .text	00000048 Vector7C
080019d0 g     F .text	00000064 extChannelEnable
08001050 g     F .text	00000034 chMtxInit
08000490 g     F .text	00000018 _idle_thread
080017f0 g     F .text	000000e0 chOQWriteTimeout
08001b20 g     F .text	00000018 pwmObjectInit
08002e30 g     F .text	0000001c VectorB0
080001e0  w    F .text	00000002 Vector90
200009dc g     O .bss	00000004 dbg_lock_cnt
08002840 g     F .text	00000084 ext_lld_channel_disable
20000000 g       *ABS*	00000000 __ram_start__
08000370 g     F .text	00000018 _port_thread_start
08002380 g     F .text	00000030 Vector60
080001e0  w    F .text	00000002 Vector1C
080001e0  w    F .text	00000002 Vector48
08002d40 g     F .text	00000034 i2c_lld_init
20000400 g       .stacks	00000000 __process_stack_base__
08004450 g     F .text	00000048 setOutput
08001f20 g     F .text	00000048 Vector70
08003410 g     F .text	0000001c VectorD4
08000430 g     F .text	0000005c nvicSetSystemHandlerPriority
08001af0 g     F .text	00000018 i2cObjectInit
08004560 g     F .text	00000044 setShutter
08004180 g     F .text	0000003c sweepEn
200008d0 g     O .bss	000000c0 _idle_thread_wa
08001670 g     F .text	0000004a chOQInit
080014f0 g     F .text	00000098 chIQGetTimeout
20000800 g       .data	00000000 _data
080001e0  w    F .text	00000002 Vector4C
2000085c g     O .data	00000004 period
08002060 g     F .text	00000048 Vector80
08001460 g     F .text	00000088 chIQPutI
08000340 g     F .text	0000000e _port_switch_from_isr
20001c54 g     O .bss	00000020 motor0_queue
080041f0 g     F .text	0000000c sweepQueue
08004280 g     F .text	0000002c setOscSignals
080023e0 g     F .text	00000030 Vector68
080011d0 g     F .text	000000e0 chMtxUnlock
080007c0 g     F .text	00000018 _trace_init
20000400 g       .stacks	00000000 __main_stack_end__
08001fc0 g     F .text	00000048 Vector78
20005000 g       *ABS*	00000000 __ram_end__
200008d0 g       .data	00000000 _edata
20002010 g       *ABS*	00000000 _end
08000940 g     F .text	0000006c chVTResetI
080001e0 g     F .text	00000002 _unhandled_exception
08001d50 g     F .text	00000068 sdObjectInit
080001e0  w    F .text	00000002 Vector88
20000400 g       .stacks	00000000 __main_thread_stack_base__
080007e0 g     F .text	00000064 dbg_trace
080000ec g       startup	00000000 __init_array_start
20000858 g     O .data	00000004 signalMask
20000ec4 g     O .bss	00000454 SD1
08004390 g     F .text	0000002e setDac2
08000d10 g     F .text	0000009c _thread_init
20000eb0 g     O .bss	00000014 PWMD3
080001e0  w    F .text	00000002 Vector50
080042b0 g     F .text	0000002c setOscPeriod
080016c0 g     F .text	0000009c chOQPutTimeout
20000000 g       .stacks	00000000 __main_stack_base__
08002580 g     F .text	00000030 Vector44
080001e0  w    F .text	00000002 Vector28
08003740 g     F .text	00000002 boardInit
080001e0  w    F .text	00000002 VectorB8
080034a0 g     F .text	00000078 sd_lld_start
00000400 g       *ABS*	00000000 __main_stack_size__
200019bc g     O .bss	00000020 sweep_queue
08000690 g     F .text	00000030 dbg_check_unlock_from_isr
20000800 g       .stacks	00000000 __process_stack_end__
080001e0  w    F .text	00000002 Vector34
080040a0 g     F .text	00000024 setLeds
08003730 g     F .text	00000008 __early_init
08002910 g     F .text	0000001c VectorA4
00000400 g       *ABS*	00000000 __process_stack_size__
080001e0  w    F .text	00000002 Vector20
080037a0 g     F .text	00000050 initCpuIo


