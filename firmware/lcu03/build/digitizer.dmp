
build/digitizer.elf:     file format elf32-littlearm
build/digitizer.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000111

Program Header:
    LOAD off    0x00008000 vaddr 0x08000000 paddr 0x08000000 align 2**15
         filesz 0x0000559c memsz 0x000055a0 flags rwx
    LOAD off    0x00010800 vaddr 0x20000800 paddr 0x080055a0 align 2**15
         filesz 0x0000000c memsz 0x0000000c flags rw-
    LOAD off    0x00010810 vaddr 0x20000810 paddr 0x080055ac align 2**15
         filesz 0x00000000 memsz 0x0000181c flags rw-
    LOAD off    0x00018000 vaddr 0x20000000 paddr 0x20000000 align 2**15
         filesz 0x00000000 memsz 0x00000800 flags rw-
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       000000ec  08000000  08000000  00008000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000054ac  080000f0  080000f0  000080f0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .textalign    00000004  0800559c  0800559c  0000d59c  2**0
                  ALLOC
  3 .stacks       00000800  20000000  20000000  00018000  2**0
                  ALLOC
  4 .data         0000000c  20000800  080055a0  00010800  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .bss          0000181c  20000810  080055ac  00010810  2**3
                  ALLOC
  6 .debug_abbrev 000062d8  00000000  00000000  0001080c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0001b739  00000000  00000000  00016ae4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00009c4d  00000000  00000000  0003221d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_pubnames 00001c15  00000000  00000000  0003be6a  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_pubtypes 00004364  00000000  00000000  0003da7f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 000013f8  00000000  00000000  00041de3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000010a8  00000000  00000000  000431db  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0000405d  00000000  00000000  00044283  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .comment      00000011  00000000  00000000  000482e0  2**0
                  CONTENTS, READONLY
 15 .ARM.attributes 00000031  00000000  00000000  000482f1  2**0
                  CONTENTS, READONLY
 16 .debug_frame  0000331c  00000000  00000000  00048324  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_loc    0000485b  00000000  00000000  0004b640  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
080000f0 l    d  .text	00000000 .text
0800559c l    d  .textalign	00000000 .textalign
20000000 l    d  .stacks	00000000 .stacks
20000800 l    d  .data	00000000 .data
20000810 l    d  .bss	00000000 .bss
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_pubtypes	00000000 .debug_pubtypes
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 vectors.c
00000000 l    df *ABS*	00000000 crt0.c
00000000 l    df *ABS*	00000000 chcore.c
00000000 l    df *ABS*	00000000 chcore_v7m.c
0800039c l       .text	00000000 _port_exit_from_isr
00000000 l    df *ABS*	00000000 nvic.c
00000000 l    df *ABS*	00000000 chsys.c
200008d0 l     O .bss	00000048 mainthread.1986
00000000 l    df *ABS*	00000000 chdebug.c
00000000 l    df *ABS*	00000000 chvt.c
00000000 l    df *ABS*	00000000 chschd.c
08000bd0 l     F .text	00000022 fifo_remove
08000c00 l     F .text	00000020 dequeue
08000db0 l     F .text	0000007c wakeup
00000000 l    df *ABS*	00000000 chthreads.c
08000fd0 l     F .text	0000001a list_remove
00000000 l    df *ABS*	00000000 chmtx.c
080012b0 l     F .text	00000046 prio_insert
08001300 l     F .text	00000022 fifo_remove
08001330 l     F .text	00000020 dequeue
00000000 l    df *ABS*	00000000 chevents.c
00000000 l    df *ABS*	00000000 chqueues.c
08001690 l     F .text	00000028 queue_insert
080016c0 l     F .text	00000022 fifo_remove
080016f0 l     F .text	00000048 qwait
00000000 l    df *ABS*	00000000 chmemcore.c
20000d5c l     O .bss	00000004 nextmem
20000d60 l     O .bss	00000004 endmem
00000000 l    df *ABS*	00000000 hal.c
00000000 l    df *ABS*	00000000 ext.c
00000000 l    df *ABS*	00000000 gpt.c
00000000 l    df *ABS*	00000000 i2c.c
00000000 l    df *ABS*	00000000 serial.c
08001ed0 l     F .text	00000026 writes
08001f00 l     F .text	00000026 reads
08001f30 l     F .text	00000016 putwouldblock
08001f50 l     F .text	00000016 getwouldblock
08001f70 l     F .text	0000002a putt
08001fa0 l     F .text	0000001e gett
08001fc0 l     F .text	00000026 writet
08001ff0 l     F .text	00000026 readt
08002020 l     F .text	00000034 getflags
080053b0 l     O .text	00000024 vmt
00000000 l    df *ABS*	00000000 stm32_dma.c
20000d64 l     O .bss	00000004 dma_streams_mask
20000d68 l     O .bss	00000038 dma_isr_redir
00000000 l    df *ABS*	00000000 hal_lld.c
080024e0 l     F .text	0000008c hal_lld_backup_domain_init
00000000 l    df *ABS*	00000000 ext_lld.c
00000000 l    df *ABS*	00000000 gpt_lld.c
08002d40 l     F .text	00000034 gpt_lld_serve_interrupt
00000000 l    df *ABS*	00000000 i2c_lld.c
08003200 l     F .text	0000018c i2c_lld_serve_event_interrupt
08003390 l     F .text	000001f8 i2c_lld_serve_error_interrupt
00000000 l    df *ABS*	00000000 serial_lld.c
08005440 l     O .text	0000000c default_config
08003620 l     F .text	00000090 usart_init
080036b0 l     F .text	0000009e set_error
08003750 l     F .text	000001a4 serve_interrupt
08003900 l     F .text	00000024 notify1
00000000 l    df *ABS*	00000000 pal_lld.c
08005450 l     O .text	00000012 cfgtab.3282
00000000 l    df *ABS*	00000000 board.c
00000000 l    df *ABS*	00000000 moto_ctrl.c
20001260 l     O .bss	00000028 motor
20000800 l     O .data	00000004 moto_vmin
20000804 l     O .data	00000004 moto_vmax
20000808 l     O .data	00000004 moto_acc
08003bf0 l     F .text	0000002e extHall0
08003c20 l     F .text	00000032 extHall1
08003c60 l     F .text	0000000a extPowerOff
080054b0 l     O .text	000000a0 extcfg
08005550 l     O .text	00000008 gpt1cfg
08004290 l     F .text	00000086 timerMotor0
08005560 l     O .text	00000008 gpt2cfg
08004320 l     F .text	0000004e offMotor0
08005570 l     O .text	00000008 gpt3cfg
08004370 l     F .text	00000084 timerMotor1
08005580 l     O .text	00000008 gpt4cfg
08004400 l     F .text	0000004c offMotor1
20001328 l     O .bss	000004b0 waMotor0
200017d8 l     O .bss	000004b0 waMotor1
08003c70 l     F .text	00000302 motor0Thread
080049a0 l     F .text	0000002c setMoto0Dir
08004a00 l     F .text	0000002c setHighCurrent
08004a30 l     F .text	00000086 nsqrt
08003f80 l     F .text	00000304 motor1Thread
080049d0 l     F .text	0000002c setMoto1Dir
08004940 l     F .text	0000002c setMotoReset
08004910 l     F .text	0000002c setMotoSleep
08004970 l     F .text	0000002c setMotoEnable
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 cpu_io.c
08005590 l     O .text	0000000c serial_cfg
00000000 l    df *ABS*	00000000 led_ctrl.c
20001c88 l     O .bss	00000010 mutex
20001c98 l     O .bss	00000004 value
20001ca0 l     O .bss	000001b0 waLeds
08004c00 l     F .text	000000be ledsThread
20001e50 l     O .bss	00000004 arg.3318
00000000 l    df *ABS*	00000000 shutter_ctrl.c
20001e58 l     O .bss	000001b0 waShutter
08004e00 l     F .text	000000a6 shutterThread
00000000 l    df *ABS*	00000000 chlists.c
00000000 l    df *ABS*	00000000 chdynamic.c
00000000 l    df *ABS*	00000000 chregistry.c
00000000 l    df *ABS*	00000000 chsem.c
00000000 l    df *ABS*	00000000 chcond.c
00000000 l    df *ABS*	00000000 chmsg.c
00000000 l    df *ABS*	00000000 chmboxes.c
00000000 l    df *ABS*	00000000 chheap.c
00000000 l    df *ABS*	00000000 chmempools.c
00000000 l    df *ABS*	00000000 test.c
00000000 l    df *ABS*	00000000 testthd.c
00000000 l    df *ABS*	00000000 testsem.c
00000000 l    df *ABS*	00000000 testmtx.c
00000000 l    df *ABS*	00000000 testmsg.c
00000000 l    df *ABS*	00000000 testmbox.c
00000000 l    df *ABS*	00000000 testevt.c
00000000 l    df *ABS*	00000000 testheap.c
00000000 l    df *ABS*	00000000 testpools.c
00000000 l    df *ABS*	00000000 testdyn.c
00000000 l    df *ABS*	00000000 testqueues.c
00000000 l    df *ABS*	00000000 testbmk.c
00000000 l    df *ABS*	00000000 adc.c
00000000 l    df *ABS*	00000000 can.c
00000000 l    df *ABS*	00000000 icu.c
00000000 l    df *ABS*	00000000 mac.c
00000000 l    df *ABS*	00000000 pal.c
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 sdc.c
00000000 l    df *ABS*	00000000 spi.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 usb.c
00000000 l    df *ABS*	00000000 tm.c
00000000 l    df *ABS*	00000000 mmc_spi.c
00000000 l    df *ABS*	00000000 serial_usb.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 adc_lld.c
00000000 l    df *ABS*	00000000 can_lld.c
00000000 l    df *ABS*	00000000 icu_lld.c
00000000 l    df *ABS*	00000000 mac_lld.c
00000000 l    df *ABS*	00000000 pwm_lld.c
00000000 l    df *ABS*	00000000 sdc_lld.c
00000000 l    df *ABS*	00000000 spi_lld.c
00000000 l    df *ABS*	00000000 uart_lld.c
00000000 l    df *ABS*	00000000 usb_lld.c
00000000 l    df *ABS*	00000000 rtc_lld.c
00000000 l    df *ABS*	00000000 evtimer.c
00000000 l    df *ABS*	00000000 syscalls.c
00000000 l    df *ABS*	00000000 shell.c
00000000 l    df *ABS*	00000000 chprintf.c
00000000 l    df *ABS*	00000000 iwdg.c
00000000 l    df *ABS*	00000000 iwdg_lld.c
00000000 l    df *ABS*	00000000 dfu_ctrl.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 strcasecmp.c
00000000 l    df *ABS*	00000000 strpbrk.c
00000000 l    df *ABS*	00000000 strspn.c
00000000 l    df *ABS*	00000000 ctype_.c
08005470 g     O .text	0000003c pal_default_config
08002790 g     F .text	00000038 Vector58
08002b10 g     F .text	0000003a VectorE8
080028d0 g     F .text	000000e4 Vector9C
080003e0 g     F .text	000000a6 nvicEnableVector
080007d0 g     F .text	0000003a dbg_check_lock_from_isr
080015c0 g     F .text	00000076 chEvtSignalFlagsI
20000db8 g     O .bss	00000010 GPTD2
08000200  w    F .text	00000002 VectorAC
08001210 g     F .text	0000001c chThdExit
08000650 g     F .text	000000d0 chSysTimerHandlerI
08001640 g     F .text	0000004e chEvtBroadcastFlagsI
08000e30 g     F .text	0000006e chSchGoSleepTimeoutS
08001ea0 g     F .text	00000008 i2cInit
080013c0 g     F .text	0000010e chMtxLockS
08000750 g     F .text	0000003a dbg_check_lock
080027d0 g     F .text	00000038 Vector5C
08000200  w    F .text	00000002 NMIVector
080010a0 g     F .text	0000002a _thread_memfill
08004cc0 g     F .text	0000007a initLed
08004d70 g     F .text	0000008a shutterInit
00000000         *UND*	00000000 setSweepRange
08001d20 g     F .text	00000018 gptObjectInit
08002470 g     F .text	0000006a dmaInit
08002e80 g     F .text	0000020a gpt_lld_start
08000200  w    F .text	00000002 Vector8C
08000200  w    F .text	00000002 VectorDC
00000000         *UND*	00000000 setTrigEn
08000000 g     O startup	000000ec _vectors
08000d10 g     F .text	00000092 chSchGoSleepS
20000da0 g     O .bss	00000008 EXTD1
20000de8 g     O .bss	00000024 I2CD1
2000202c g       *ABS*	00000000 __heap_base__
080055a0 g       *ABS*	00000000 _etext
080010d0 g     F .text	00000074 chThdCreateI
200012a8 g     O .bss	0000000c motor0_queue_buffer
08000720 g     F .text	0000002c dbg_check_enable
08000200  w    F .text	00000002 VectorC8
080031d0 g     F .text	00000026 gpt_lld_stop_timer
08000ea0 g     F .text	00000092 chSchWakeupS
20001304 g     O .bss	00000020 motor1_stop_queue
08002150 g     F .text	0000007e sdIncomingDataI
08001a90 g     F .text	00000082 chOQGetI
00000000         *UND*	00000000 adcQueue
08000c20 g     F .text	0000006a _scheduler_init
08001150 g     F .text	00000076 chThdCreateStatic
08000200  w    F .text	00000002 Vector94
08000200  w    F .text	00000002 VectorA8
08002dc0 g     F .text	0000001c VectorB4
08000c90 g     F .text	00000072 chSchReadyI
080000ec g       startup	00000000 __fini_array_end
08000210  w    F .text	00000004 port_halt
20000800 g       .stacks	00000000 __main_thread_stack_end__
08000a50 g     F .text	00000044 _vt_init
08002290 g     F .text	0000005e Vector74
08001c40 g     F .text	00000028 halInit
20000810 g       .bss	00000000 _bss_start
08000200  w    F .text	00000002 UsageFaultVector
20005000 g       *ABS*	00000000 __heap_end__
08000200  w    F .text	00000002 DebugMonitorVector
20000dd8 g     O .bss	00000010 GPTD4
00000000         *UND*	00000000 setSweepEn
20000da8 g     O .bss	00000010 GPTD1
08000790 g     F .text	0000003a dbg_check_unlock
08000200  w    F .text	00000002 Vector40
08004530 g     F .text	00000380 motorInit
08000110 g     F .text	000000f0 ResetHandler
080018c0 g     F .text	000000e0 chIQReadTimeout
08003590 g     F .text	0000001c VectorBC
08001ca0 g     F .text	0000006c extStart
08000280 g     F .text	00000048 _port_init
08002570 g     F .text	000000e6 hal_lld_init
08001230 g     F .text	00000076 chThdExitS
08001c80 g     F .text	00000018 extObjectInit
20000920 g     O .bss	00000408 dbg_trace_buffer
08000200  w    F .text	00000002 PendSVVector
08000aa0 g     F .text	000000aa chVTSetI
08002850 g     F .text	00000038 Vector64
2000202c g       .bss	00000000 _bss_end
20000d28 g     O .bss	00000004 dbg_panic_msg
200012f8 g     O .bss	0000000c motor1_queue_buffer
08000100  w    F .text	00000002 _default_exit
08003ae0 g     F .text	000000ea _pal_lld_setgroupmode
08000200  w    F .text	00000002 VectorCC
20002008 g     O .bss	00000020 sh_queue
08003950 g     F .text	00000030 sd_lld_init
08000200  w    F .text	00000002 Vector54
08000200  w    F .text	00000002 Vector98
08001e10 g     F .text	00000034 gptStartOneShot
08000200  w    F .text	00000002 VectorD8
08000200  w    F .text	00000002 Vector24
08000910 g     F .text	0000002c chDbgCheckClassI
08001390 g     F .text	00000028 chMtxLock
20002028 g     O .bss	00000003 sh_queue_buffer
08000f40 g     F .text	00000084 chSchDoReschedule
080005a0 g     F .text	000000a2 chSysInit
200012d8 g     O .bss	00000020 motor1_queue
080011d0 g     F .text	0000003e chThdSleep
08001740 g     F .text	0000004c chIQInit
080053e0 g     O .text	00000054 _stm32_dma_streams
08002410 g     F .text	0000005e Vector84
08001c70 g     F .text	00000008 extInit
08004450 g     F .text	000000d2 motorMove
08000220 g     F .text	0000002c SysTickVector
20000918 g     O .bss	00000004 dbg_isr_cnt
08002660 g     F .text	00000124 stm32_clock_init
080039e0 g     F .text	000000f2 _pal_lld_init
08002060 g     F .text	00000008 sdInit
08000200  w    F .text	00000002 BusFaultVector
08000200  w    F .text	00000002 VectorD0
08001c00 g     F .text	00000036 _core_init
20000dc8 g     O .bss	00000010 GPTD3
00000000         *UND*	00000000 instantAdc
080020e0 g     F .text	00000062 sdStart
08002b50 g     F .text	00000010 ext_lld_init
08000200  w    F .text	00000002 VectorE4
080035b0 g     F .text	0000001c VectorC0
08003180 g     F .text	0000004e gpt_lld_start_timer
200012b4 g     O .bss	00000020 motor0_stop_queue
080003a0 g     F .text	00000014 _port_switch
00005000 g       *ABS*	00000000 __ram_size__
08000250 g     F .text	00000026 SVCallVector
080000f0  w    F .text	00000002 __late_init
08001d10 g     F .text	00000008 gptInit
08000a30 g     F .text	0000001a chDbgPanic
20000d2c g     O .bss	00000010 vtlist
08000200  w    F .text	00000002 HardFaultVector
080002d0 g     F .text	000000bc _port_irq_epilogue
08000940 g     F .text	0000002c chDbgCheckClassS
00000000         *UND*	00000000 lastTemp
08002e00 g     F .text	00000078 gpt_lld_init
00000000         *UND*	00000000 setSweepTime
080008b0 g     F .text	00000054 dbg_check_leave_isr
080055a0 g       *ABS*	00000000 _textdata
080029c0 g     F .text	00000108 VectorE0
00000000 g       *ABS*	00000000 _text
08000200  w    F .text	00000002 MemManageVector
080000ec g       startup	00000000 __fini_array_start
08004ac0 g     F .text	000000c4 main
080021d0 g     F .text	0000005a Vector6C
08001d40 g     F .text	0000006c gptStart
00000000         *UND*	00000000 setDac1
20000d3c g     O .bss	00000020 rlist
08000200  w    F .text	00000002 VectorA0
08002b60 g     F .text	000001de ext_lld_start
200012d4 g     O .bss	00000003 motor0_stop_queue_buffer
08000850 g     F .text	00000054 dbg_check_enter_isr
080000ec g       startup	00000000 __init_array_end
08000200  w    F .text	00000002 VectorC4
08002350 g     F .text	0000005e Vector7C
20001324 g     O .bss	00000003 motor1_stop_queue_buffer
08001350 g     F .text	00000034 chMtxInit
08000580 g     F .text	0000001a _idle_thread
08001b20 g     F .text	000000e0 chOQWriteTimeout
08002da0 g     F .text	0000001c VectorB0
08000200  w    F .text	00000002 Vector90
2000091c g     O .bss	00000004 dbg_lock_cnt
20000000 g       *ABS*	00000000 __ram_start__
080003c0 g     F .text	00000018 _port_thread_start
08002810 g     F .text	00000038 Vector60
08000200  w    F .text	00000002 Vector1C
08001db0 g     F .text	0000005e gptStop
080048b0 g     F .text	0000005a motorInMotion
08000200  w    F .text	00000002 Vector48
080035d0 g     F .text	00000050 i2c_lld_init
20000400 g       .stacks	00000000 __process_stack_base__
00000000         *UND*	00000000 setOutput
08002230 g     F .text	0000005e Vector70
08003930 g     F .text	0000001c VectorD4
08000510 g     F .text	00000062 nvicSetSystemHandlerPriority
08001eb0 g     F .text	00000018 i2cObjectInit
08001e50 g     F .text	0000004e gptStartOneShotI
00000000         *UND*	00000000 sweepEn
20000810 g     O .bss	000000c0 _idle_thread_wa
080019a0 g     F .text	0000004a chOQInit
08001820 g     F .text	0000009a chIQGetTimeout
20000800 g       .data	00000000 _data
08000200  w    F .text	00000002 Vector4C
080023b0 g     F .text	0000005e Vector80
08001790 g     F .text	00000088 chIQPutI
08000390 g     F .text	0000000e _port_switch_from_isr
20001288 g     O .bss	00000020 motor0_queue
00000000         *UND*	00000000 sweepQueue
00000000         *UND*	00000000 setOscSignals
08002890 g     F .text	00000038 Vector68
080014d0 g     F .text	000000e6 chMtxUnlock
08000970 g     F .text	00000020 _trace_init
20000400 g       .stacks	00000000 __main_stack_end__
080022f0 g     F .text	0000005e Vector78
20005000 g       *ABS*	00000000 __ram_end__
2000080c g       .data	00000000 _edata
2000202c g       *ABS*	00000000 _end
08000b50 g     F .text	00000072 chVTResetI
08000200 g     F .text	00000002 _unhandled_exception
08003090 g     F .text	000000e8 gpt_lld_stop
08002070 g     F .text	0000006a sdObjectInit
08000200  w    F .text	00000002 Vector88
20000400 g       .stacks	00000000 __main_thread_stack_base__
08000990 g     F .text	00000094 dbg_trace
080000ec g       startup	00000000 __init_array_start
20000e0c g     O .bss	00000454 SD1
00000000         *UND*	00000000 setDac2
08000ff0 g     F .text	000000ae _thread_init
08000200  w    F .text	00000002 Vector50
00000000         *UND*	00000000 setOscPeriod
08000490 g     F .text	00000076 nvicDisableVector
080019f0 g     F .text	0000009e chOQPutTimeout
20000000 g       .stacks	00000000 __main_stack_base__
08002ad0 g     F .text	0000003a Vector44
08000200  w    F .text	00000002 Vector28
08003be0 g     F .text	00000002 boardInit
08002de0 g     F .text	0000001c VectorB8
08003980 g     F .text	0000005e sd_lld_start
00000400 g       *ABS*	00000000 __main_stack_size__
08000810 g     F .text	0000003a dbg_check_unlock_from_isr
20000800 g       .stacks	00000000 __process_stack_end__
08000200  w    F .text	00000002 Vector34
08004d40 g     F .text	00000026 setLeds
08003bd0 g     F .text	00000008 __early_init
08002d80 g     F .text	0000001c VectorA4
00000400 g       *ABS*	00000000 __process_stack_size__
08000200  w    F .text	00000002 Vector20
08004b90 g     F .text	00000068 initCpuIo


