
build/digitizer.elf:     file format elf32-littlearm
build/digitizer.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000111

Program Header:
    LOAD off    0x00008000 vaddr 0x08000000 paddr 0x08000000 align 2**15
         filesz 0x00004adc memsz 0x00004ae0 flags rwx
    LOAD off    0x00010800 vaddr 0x20000800 paddr 0x08004ae0 align 2**15
         filesz 0x0000000c memsz 0x0000000c flags rw-
    LOAD off    0x00010810 vaddr 0x20000810 paddr 0x08004aec align 2**15
         filesz 0x00000000 memsz 0x0000181c flags rw-
    LOAD off    0x00018000 vaddr 0x20000000 paddr 0x20000000 align 2**15
         filesz 0x00000000 memsz 0x00000800 flags rw-
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       000000ec  08000000  08000000  00008000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000049ec  080000f0  080000f0  000080f0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .textalign    00000004  08004adc  08004adc  0000cadc  2**0
                  ALLOC
  3 .stacks       00000800  20000000  20000000  00018000  2**0
                  ALLOC
  4 .data         0000000c  20000800  08004ae0  00010800  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .bss          0000181c  20000810  08004aec  00010810  2**3
                  ALLOC
  6 .debug_abbrev 00005cae  00000000  00000000  0001080c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0001af57  00000000  00000000  000164ba  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000a81f  00000000  00000000  00031411  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_pubnames 00001b6c  00000000  00000000  0003bc30  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_pubtypes 00004321  00000000  00000000  0003d79c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00001378  00000000  00000000  00041abd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00001060  00000000  00000000  00042e35  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003e2b  00000000  00000000  00043e95  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .comment      0000002a  00000000  00000000  00047cc0  2**0
                  CONTENTS, READONLY
 15 .ARM.attributes 00000031  00000000  00000000  00047cea  2**0
                  CONTENTS, READONLY
 16 .debug_frame  00003320  00000000  00000000  00047d1c  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_loc    000044c4  00000000  00000000  0004b03c  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
080000f0 l    d  .text	00000000 .text
08004adc l    d  .textalign	00000000 .textalign
20000000 l    d  .stacks	00000000 .stacks
20000800 l    d  .data	00000000 .data
20000810 l    d  .bss	00000000 .bss
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_pubtypes	00000000 .debug_pubtypes
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 vectors.c
00000000 l    df *ABS*	00000000 crt0.c
00000000 l    df *ABS*	00000000 chcore.c
00000000 l    df *ABS*	00000000 chcore_v7m.c
0800034c l       .text	00000000 _port_exit_from_isr
00000000 l    df *ABS*	00000000 nvic.c
00000000 l    df *ABS*	00000000 chsys.c
200008d0 l     O .bss	00000048 mainthread.4646
00000000 l    df *ABS*	00000000 chdebug.c
00000000 l    df *ABS*	00000000 chvt.c
00000000 l    df *ABS*	00000000 chschd.c
08000a20 l     F .text	00000022 fifo_remove
08000a50 l     F .text	00000020 dequeue
08000b90 l     F .text	0000007c wakeup
00000000 l    df *ABS*	00000000 chthreads.c
08000d60 l     F .text	0000001a list_remove
00000000 l    df *ABS*	00000000 chmtx.c
08001020 l     F .text	00000046 prio_insert
08001070 l     F .text	00000022 fifo_remove
080010a0 l     F .text	00000020 dequeue
00000000 l    df *ABS*	00000000 chevents.c
00000000 l    df *ABS*	00000000 chqueues.c
080013e0 l     F .text	00000028 queue_insert
08001410 l     F .text	00000022 fifo_remove
08001440 l     F .text	00000040 qwait
00000000 l    df *ABS*	00000000 chmemcore.c
20000d5c l     O .bss	00000004 nextmem
20000d60 l     O .bss	00000004 endmem
00000000 l    df *ABS*	00000000 hal.c
00000000 l    df *ABS*	00000000 ext.c
00000000 l    df *ABS*	00000000 gpt.c
00000000 l    df *ABS*	00000000 i2c.c
00000000 l    df *ABS*	00000000 serial.c
08001c00 l     F .text	00000026 writes
08001c30 l     F .text	00000026 reads
08001c60 l     F .text	00000016 putwouldblock
08001c80 l     F .text	00000016 getwouldblock
08001ca0 l     F .text	0000002a putt
08001cd0 l     F .text	0000001e gett
08001cf0 l     F .text	00000026 writet
08001d20 l     F .text	00000026 readt
08001d50 l     F .text	00000034 getflags
080048f0 l     O .text	00000024 vmt
00000000 l    df *ABS*	00000000 stm32_dma.c
20000d64 l     O .bss	00000004 dma_streams_mask
20000d68 l     O .bss	00000038 dma_isr_redir
00000000 l    df *ABS*	00000000 hal_lld.c
08002190 l     F .text	00000058 hal_lld_backup_domain_init
00000000 l    df *ABS*	00000000 ext_lld.c
00000000 l    df *ABS*	00000000 gpt_lld.c
080027c0 l     F .text	00000034 gpt_lld_serve_interrupt
00000000 l    df *ABS*	00000000 i2c_lld.c
08002ba0 l     F .text	00000180 i2c_lld_serve_event_interrupt
08002d20 l     F .text	000001f8 i2c_lld_serve_error_interrupt
00000000 l    df *ABS*	00000000 serial_lld.c
08004980 l     O .text	0000000c default_config
08002fa0 l     F .text	00000088 usart_init
08003030 l     F .text	0000009c set_error
080030d0 l     F .text	000001a2 serve_interrupt
08003280 l     F .text	0000001c notify1
00000000 l    df *ABS*	00000000 pal_lld.c
08004990 l     O .text	00000012 cfgtab.5942
00000000 l    df *ABS*	00000000 board.c
00000000 l    df *ABS*	00000000 moto_ctrl.c
20001260 l     O .bss	00000028 motor
20000800 l     O .data	00000004 moto_vmin
20000804 l     O .data	00000004 moto_vmax
20000808 l     O .data	00000004 moto_acc
080049f0 l     O .text	000000a0 extcfg
08003ee0 l     F .text	00000020 extHall0
08003f30 l     F .text	0000000a extPowerOff
08003f00 l     F .text	00000024 extHall1
08004a90 l     O .text	00000008 gpt0cfg
08003500 l     F .text	00000064 timerMotor0
08004aa0 l     O .text	00000008 gpt1cfg
08003570 l     F .text	00000044 offMotor0
08004ab0 l     O .text	00000008 gpt2cfg
080035c0 l     F .text	0000006c timerMotor1
08004ac0 l     O .text	00000008 gpt3cfg
08003630 l     F .text	0000004c offMotor1
20001328 l     O .bss	000004b0 waMotor0
200017d8 l     O .bss	000004b0 waMotor1
08003680 l     F .text	00000268 motor0Thread
08003fd0 l     F .text	00000024 setMoto0Dir
08004030 l     F .text	00000024 setHighCurrent
08004060 l     F .text	0000008c nsqrt
080038f0 l     F .text	00000270 motor1Thread
08004000 l     F .text	00000024 setMoto1Dir
08003f70 l     F .text	00000024 setMotoReset
08003f40 l     F .text	00000024 setMotoSleep
08003fa0 l     F .text	00000024 setMotoEnable
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 cpu_io.c
08004ad0 l     O .text	0000000c serial_cfg
00000000 l    df *ABS*	00000000 led_ctrl.c
20001c88 l     O .bss	00000010 mutex
20001c98 l     O .bss	00000004 value
20001ca0 l     O .bss	000001b0 waLeds
080041c0 l     F .text	00000088 ledsThread
20001e50 l     O .bss	00000004 arg.5978
00000000 l    df *ABS*	00000000 shutter_ctrl.c
20001e58 l     O .bss	000001b0 waShutter
08004360 l     F .text	00000084 shutterThread
00000000 l    df *ABS*	00000000 chlists.c
00000000 l    df *ABS*	00000000 chdynamic.c
00000000 l    df *ABS*	00000000 chregistry.c
00000000 l    df *ABS*	00000000 chsem.c
00000000 l    df *ABS*	00000000 chcond.c
00000000 l    df *ABS*	00000000 chmsg.c
00000000 l    df *ABS*	00000000 chmboxes.c
00000000 l    df *ABS*	00000000 chheap.c
00000000 l    df *ABS*	00000000 chmempools.c
00000000 l    df *ABS*	00000000 test.c
00000000 l    df *ABS*	00000000 testthd.c
00000000 l    df *ABS*	00000000 testsem.c
00000000 l    df *ABS*	00000000 testmtx.c
00000000 l    df *ABS*	00000000 testmsg.c
00000000 l    df *ABS*	00000000 testmbox.c
00000000 l    df *ABS*	00000000 testevt.c
00000000 l    df *ABS*	00000000 testheap.c
00000000 l    df *ABS*	00000000 testpools.c
00000000 l    df *ABS*	00000000 testdyn.c
00000000 l    df *ABS*	00000000 testqueues.c
00000000 l    df *ABS*	00000000 testbmk.c
00000000 l    df *ABS*	00000000 adc.c
00000000 l    df *ABS*	00000000 can.c
00000000 l    df *ABS*	00000000 icu.c
00000000 l    df *ABS*	00000000 mac.c
00000000 l    df *ABS*	00000000 pal.c
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 sdc.c
00000000 l    df *ABS*	00000000 spi.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 usb.c
00000000 l    df *ABS*	00000000 tm.c
00000000 l    df *ABS*	00000000 mmc_spi.c
00000000 l    df *ABS*	00000000 serial_usb.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 adc_lld.c
00000000 l    df *ABS*	00000000 can_lld.c
00000000 l    df *ABS*	00000000 icu_lld.c
00000000 l    df *ABS*	00000000 mac_lld.c
00000000 l    df *ABS*	00000000 pwm_lld.c
00000000 l    df *ABS*	00000000 sdc_lld.c
00000000 l    df *ABS*	00000000 spi_lld.c
00000000 l    df *ABS*	00000000 uart_lld.c
00000000 l    df *ABS*	00000000 usb_lld.c
00000000 l    df *ABS*	00000000 rtc_lld.c
00000000 l    df *ABS*	00000000 evtimer.c
00000000 l    df *ABS*	00000000 syscalls.c
00000000 l    df *ABS*	00000000 shell.c
00000000 l    df *ABS*	00000000 chprintf.c
00000000 l    df *ABS*	00000000 iwdg.c
00000000 l    df *ABS*	00000000 iwdg_lld.c
00000000 l    df *ABS*	00000000 dfu_ctrl.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 strcasecmp.c
00000000 l    df *ABS*	00000000 strpbrk.c
00000000 l    df *ABS*	00000000 strspn.c
080049b0 g     O .text	0000003c pal_default_config
08002340 g     F .text	00000030 Vector58
080025d0 g     F .text	00000030 VectorE8
08002430 g     F .text	000000a4 Vector9C
08000390 g     F .text	00000094 nvicEnableVector
080006d0 g     F .text	00000030 dbg_check_lock_from_isr
08001320 g     F .text	00000070 chEvtSignalFlagsI
20000db8 g     O .bss	00000010 GPTD2
080001e0  w    F .text	00000002 VectorAC
08000f80 g     F .text	0000001c chThdExit
080005b0 g     F .text	00000090 chSysTimerHandlerI
08001390 g     F .text	0000004c chEvtBroadcastFlagsI
08000c10 g     F .text	00000060 chSchGoSleepTimeoutS
08001bd0 g     F .text	00000008 i2cInit
08001130 g     F .text	00000108 chMtxLockS
08000670 g     F .text	00000030 dbg_check_lock
08002370 g     F .text	00000030 Vector5C
080001e0  w    F .text	00000002 NMIVector
08000e20 g     F .text	0000002a _thread_memfill
08004250 g     F .text	00000060 initLed
080042e0 g     F .text	00000074 shutterInit
00000000         *UND*	00000000 setSweepRange
08001a50 g     F .text	00000018 gptObjectInit
08002120 g     F .text	00000064 dmaInit
080028e0 g     F .text	00000178 gpt_lld_start
080001e0  w    F .text	00000002 Vector8C
080001e0  w    F .text	00000002 VectorDC
00000000         *UND*	00000000 setTrigEn
08000000 g     O startup	000000ec _vectors
08000b20 g     F .text	00000070 chSchGoSleepS
20000da0 g     O .bss	00000008 EXTD1
20000de8 g     O .bss	00000024 I2CD1
2000202c g       *ABS*	00000000 __heap_base__
08004ae0 g       *ABS*	00000000 _etext
08000e50 g     F .text	00000070 chThdCreateI
200012a8 g     O .bss	0000000c motor0_queue_buffer
08000640 g     F .text	00000028 dbg_check_enable
080001e0  w    F .text	00000002 VectorC8
08002b70 g     F .text	00000026 gpt_lld_stop_timer
08000c70 g     F .text	0000007c chSchWakeupS
20001304 g     O .bss	00000020 motor1_stop_queue
08001e70 g     F .text	0000007c sdIncomingDataI
080017d0 g     F .text	00000082 chOQGetI
00000000         *UND*	00000000 adcQueue
08000a70 g     F .text	00000034 _scheduler_init
08000ec0 g     F .text	00000074 chThdCreateStatic
080001e0  w    F .text	00000002 Vector94
080001e0  w    F .text	00000002 VectorA8
08002840 g     F .text	0000001c VectorB4
08000ab0 g     F .text	00000070 chSchReadyI
080000ec g       startup	00000000 __fini_array_end
080001f0  w    F .text	00000004 port_halt
20000800 g       .stacks	00000000 __main_thread_stack_end__
080008e0 g     F .text	00000024 _vt_init
08001f90 g     F .text	00000048 Vector74
08001970 g     F .text	00000028 halInit
20000810 g       .bss	00000000 _bss_start
080001e0  w    F .text	00000002 UsageFaultVector
20005000 g       *ABS*	00000000 __heap_end__
080001e0  w    F .text	00000002 DebugMonitorVector
20000dd8 g     O .bss	00000010 GPTD4
00000000         *UND*	00000000 setSweepEn
20000da8 g     O .bss	00000010 GPTD1
080006a0 g     F .text	00000030 dbg_check_unlock
080001e0  w    F .text	00000002 Vector40
08003c30 g     F .text	0000026c motorInit
08000110 g     F .text	000000d0 ResetHandler
08001600 g     F .text	000000e0 chIQReadTimeout
08002f20 g     F .text	0000001c VectorBC
080019d0 g     F .text	00000068 extStart
08000260 g     F .text	00000040 _port_init
080021f0 g     F .text	00000090 hal_lld_init
08000fa0 g     F .text	00000074 chThdExitS
080019b0 g     F .text	00000018 extObjectInit
20000920 g     O .bss	00000408 dbg_trace_buffer
080001e0  w    F .text	00000002 PendSVVector
08000910 g     F .text	0000009c chVTSetI
080023d0 g     F .text	00000030 Vector64
2000202c g       .bss	00000000 _bss_end
20000d28 g     O .bss	00000004 dbg_panic_msg
200012f8 g     O .bss	0000000c motor1_queue_buffer
08000100  w    F .text	00000002 _default_exit
08003400 g     F .text	000000e0 _pal_lld_setgroupmode
080001e0  w    F .text	00000002 VectorCC
20002008 g     O .bss	00000020 sh_queue
080032c0 g     F .text	00000024 sd_lld_init
080001e0  w    F .text	00000002 Vector54
080001e0  w    F .text	00000002 Vector98
08001b40 g     F .text	00000034 gptStartOneShot
080001e0  w    F .text	00000002 VectorD8
080001e0  w    F .text	00000002 Vector24
080007d0 g     F .text	00000028 chDbgCheckClassI
08001100 g     F .text	00000028 chMtxLock
20002028 g     O .bss	00000003 sh_queue_buffer
08000cf0 g     F .text	00000064 chSchDoReschedule
08000520 g     F .text	00000084 chSysInit
200012d8 g     O .bss	00000020 motor1_queue
08000f40 g     F .text	0000003c chThdSleep
08001480 g     F .text	0000004c chIQInit
08004920 g     O .text	00000054 _stm32_dma_streams
080020d0 g     F .text	00000048 Vector84
080019a0 g     F .text	00000008 extInit
08003b60 g     F .text	000000c8 motorMove
08000200 g     F .text	0000002c SysTickVector
20000918 g     O .bss	00000004 dbg_isr_cnt
08002280 g     F .text	000000b4 stm32_clock_init
08003350 g     F .text	000000a4 _pal_lld_init
08001d90 g     F .text	00000008 sdInit
080001e0  w    F .text	00000002 BusFaultVector
080001e0  w    F .text	00000002 VectorD0
08001940 g     F .text	00000030 _core_init
20000dc8 g     O .bss	00000010 GPTD3
00000000         *UND*	00000000 instantAdc
08001e10 g     F .text	00000060 sdStart
08002600 g     F .text	00000010 ext_lld_init
080001e0  w    F .text	00000002 VectorE4
08002f40 g     F .text	0000001c VectorC0
08002b20 g     F .text	0000004e gpt_lld_start_timer
200012b4 g     O .bss	00000020 motor0_stop_queue
08000350 g     F .text	00000014 _port_switch
00005000 g       *ABS*	00000000 __ram_size__
08000230 g     F .text	00000026 SVCallVector
080000f0  w    F .text	00000002 __late_init
08001a40 g     F .text	00000008 gptInit
080008c0 g     F .text	00000018 chDbgPanic
20000d2c g     O .bss	00000010 vtlist
080001e0  w    F .text	00000002 HardFaultVector
080002a0 g     F .text	0000009c _port_irq_epilogue
08000800 g     F .text	00000028 chDbgCheckClassS
00000000         *UND*	00000000 lastTemp
08002880 g     F .text	00000054 gpt_lld_init
00000000         *UND*	00000000 setSweepTime
08000780 g     F .text	00000044 dbg_check_leave_isr
08004ae0 g       *ABS*	00000000 _textdata
080024e0 g     F .text	000000bc VectorE0
00000000 g       *ABS*	00000000 _text
080001e0  w    F .text	00000002 MemManageVector
080000ec g       startup	00000000 __fini_array_start
080040f0 g     F .text	0000007c main
08001ef0 g     F .text	00000044 Vector6C
08001a70 g     F .text	00000068 gptStart
00000000         *UND*	00000000 setDac1
20000d3c g     O .bss	00000020 rlist
080001e0  w    F .text	00000002 VectorA0
08002610 g     F .text	000001a8 ext_lld_start
200012d4 g     O .bss	00000003 motor0_stop_queue_buffer
08000730 g     F .text	00000044 dbg_check_enter_isr
080000ec g       startup	00000000 __init_array_end
080001e0  w    F .text	00000002 VectorC4
08002030 g     F .text	00000048 Vector7C
20001324 g     O .bss	00000003 motor1_stop_queue_buffer
080010c0 g     F .text	00000034 chMtxInit
08000500 g     F .text	00000018 _idle_thread
08001860 g     F .text	000000e0 chOQWriteTimeout
08002820 g     F .text	0000001c VectorB0
080001e0  w    F .text	00000002 Vector90
2000091c g     O .bss	00000004 dbg_lock_cnt
20000000 g       *ABS*	00000000 __ram_start__
08000370 g     F .text	00000018 _port_thread_start
080023a0 g     F .text	00000030 Vector60
080001e0  w    F .text	00000002 Vector1C
08001ae0 g     F .text	0000005c gptStop
08003ea0 g     F .text	00000040 motorInMotion
080001e0  w    F .text	00000002 Vector48
08002f60 g     F .text	00000034 i2c_lld_init
20000400 g       .stacks	00000000 __process_stack_base__
00000000         *UND*	00000000 setOutput
08001f40 g     F .text	00000048 Vector70
080032a0 g     F .text	0000001c VectorD4
080004a0 g     F .text	0000005c nvicSetSystemHandlerPriority
08001be0 g     F .text	00000018 i2cObjectInit
08001b80 g     F .text	0000004c gptStartOneShotI
00000000         *UND*	00000000 sweepEn
20000810 g     O .bss	000000c0 _idle_thread_wa
080016e0 g     F .text	0000004a chOQInit
08001560 g     F .text	00000098 chIQGetTimeout
20000800 g       .data	00000000 _data
080001e0  w    F .text	00000002 Vector4C
08002080 g     F .text	00000048 Vector80
080014d0 g     F .text	00000088 chIQPutI
08000340 g     F .text	0000000e _port_switch_from_isr
20001288 g     O .bss	00000020 motor0_queue
00000000         *UND*	00000000 sweepQueue
00000000         *UND*	00000000 setOscSignals
08002400 g     F .text	00000030 Vector68
08001240 g     F .text	000000e0 chMtxUnlock
08000830 g     F .text	00000018 _trace_init
20000400 g       .stacks	00000000 __main_stack_end__
08001fe0 g     F .text	00000048 Vector78
20005000 g       *ABS*	00000000 __ram_end__
2000080c g       .data	00000000 _edata
2000202c g       *ABS*	00000000 _end
080009b0 g     F .text	0000006c chVTResetI
080001e0 g     F .text	00000002 _unhandled_exception
08002a60 g     F .text	000000b4 gpt_lld_stop
08001da0 g     F .text	00000068 sdObjectInit
080001e0  w    F .text	00000002 Vector88
20000400 g       .stacks	00000000 __main_thread_stack_base__
08000850 g     F .text	00000064 dbg_trace
080000ec g       startup	00000000 __init_array_start
20000e0c g     O .bss	00000454 SD1
00000000         *UND*	00000000 setDac2
08000d80 g     F .text	0000009c _thread_init
080001e0  w    F .text	00000002 Vector50
00000000         *UND*	00000000 setOscPeriod
08000430 g     F .text	0000006c nvicDisableVector
08001730 g     F .text	0000009c chOQPutTimeout
20000000 g       .stacks	00000000 __main_stack_base__
080025a0 g     F .text	00000030 Vector44
080001e0  w    F .text	00000002 Vector28
080034f0 g     F .text	00000002 boardInit
08002860 g     F .text	0000001c VectorB8
080032f0 g     F .text	00000054 sd_lld_start
00000400 g       *ABS*	00000000 __main_stack_size__
08000700 g     F .text	00000030 dbg_check_unlock_from_isr
20000800 g       .stacks	00000000 __process_stack_end__
080001e0  w    F .text	00000002 Vector34
080042b0 g     F .text	00000024 setLeds
080034e0 g     F .text	00000008 __early_init
08002800 g     F .text	0000001c VectorA4
00000400 g       *ABS*	00000000 __process_stack_size__
080001e0  w    F .text	00000002 Vector20
08004170 g     F .text	00000050 initCpuIo


