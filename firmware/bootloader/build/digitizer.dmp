
build/digitizer.elf:     file format elf32-littlearm
build/digitizer.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000141

Program Header:
    LOAD off    0x00010000 vaddr 0x08000000 paddr 0x08000000 align 2**16
         filesz 0x00002284 memsz 0x00002288 flags rwx
    LOAD off    0x00020800 vaddr 0x20000800 paddr 0x08002288 align 2**16
         filesz 0x00000004 memsz 0x00000004 flags rw-
    LOAD off    0x00020808 vaddr 0x20000808 paddr 0x0800228c align 2**16
         filesz 0x00000000 memsz 0x00000fc0 flags rw-
    LOAD off    0x00030000 vaddr 0x20000000 paddr 0x20000000 align 2**16
         filesz 0x00000000 memsz 0x00000800 flags rw-
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       000000ec  08000000  08000000  00010000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002194  080000f0  080000f0  000100f0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .textalign    00000004  08002284  08002284  00012284  2**0
                  ALLOC
  3 .stacks       00000800  20000000  20000000  00030000  2**0
                  ALLOC
  4 .data         00000004  20000800  08002288  00020800  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .bss          00000fc0  20000808  0800228c  00020808  2**3
                  ALLOC
  6 .debug_info   0000b4d0  00000000  00000000  00020804  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002f73  00000000  00000000  0002bcd4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00003264  00000000  00000000  0002ec47  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 000007b0  00000000  00000000  00031eab  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000ab0  00000000  00000000  0003265b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00003f05  00000000  00000000  0003310b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00001df2  00000000  00000000  00037010  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .comment      0000006e  00000000  00000000  00038e02  2**0
                  CONTENTS, READONLY
 14 .ARM.attributes 00000033  00000000  00000000  00038e70  2**0
                  CONTENTS, READONLY
 15 .debug_frame  00001498  00000000  00000000  00038ea4  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
080000f0 l    d  .text	00000000 .text
08002284 l    d  .textalign	00000000 .textalign
20000000 l    d  .stacks	00000000 .stacks
20000800 l    d  .data	00000000 .data
20000808 l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 vectors.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 crt0.c
00000000 l    df *ABS*	00000000 chcore.c
00000000 l    df *ABS*	00000000 chcore_v7m.c
0800027c l       .text	00000000 _port_exit_from_isr
00000000 l    df *ABS*	00000000 nvic.c
00000000 l    df *ABS*	00000000 chsys.c
20000808 l     O .bss	00000048 mainthread.4904
00000000 l    df *ABS*	00000000 chdebug.c
00000000 l    df *ABS*	00000000 chvt.c
00000000 l    df *ABS*	00000000 chschd.c
080008c0 l     F .text	00000038 wakeup
00000000 l    df *ABS*	00000000 chthreads.c
00000000 l    df *ABS*	00000000 chmtx.c
00000000 l    df *ABS*	00000000 chevents.c
00000000 l    df *ABS*	00000000 chqueues.c
08000ea0 l     F .text	00000028 qwait
00000000 l    df *ABS*	00000000 chmemcore.c
20000d54 l     O .bss	00000004 endmem
20000d58 l     O .bss	00000004 nextmem
00000000 l    df *ABS*	00000000 hal.c
00000000 l    df *ABS*	00000000 serial.c
08001220 l     F .text	0000000a putwouldblock
08001230 l     F .text	0000000a getwouldblock
08001240 l     F .text	00000022 getflags
08001270 l     F .text	00000006 readt
08001280 l     F .text	0000000a reads
08001290 l     F .text	00000006 writet
080012a0 l     F .text	0000000a writes
080012b0 l     F .text	00000006 gett
080012c0 l     F .text	00000006 putt
08002180 l     O .text	00000024 vmt
00000000 l    df *ABS*	00000000 hal_lld.c
00000000 l    df *ABS*	00000000 serial_lld.c
08001510 l     F .text	00000014 notify1
080021b0 l     O .text	0000000c default_config
00000000 l    df *ABS*	00000000 pal_lld.c
080021c0 l     O .text	00000012 cfgtab.6006
00000000 l    df *ABS*	00000000 board.c
00000000 l    df *ABS*	00000000 cpu_io.c
08001850 l     F .text	00000004 dfu_run_firmware
08001860 l     F .text	0000002c writeResult
08001890 l     F .text	00000028 dfu_write_sector
080018c0 l     F .text	00000014 dfu_push
080018e0 l     F .text	00000012 set_led
08001900 l     F .text	00000040 firmware_version
08001940 l     F .text	0000003c hardware_version
200011b0 l     O .bss	00000004 out_index.6365
08002220 l     O .text	0000000c serial_cfg
08002230 l     O .text	00000018 funcs
200011b4 l     O .bss	00000020 buffer
200011d4 l     O .bss	00000020 args
200011f4 l     O .bss	00000001 slash.6364
00000000 l    df *ABS*	00000000 led_ctrl.c
08001a90 l     F .text	00000060 ledsThread
200011f8 l     O .bss	00000010 mutex
20001208 l     O .bss	00000004 value
20001210 l     O .bss	000001b0 waLeds
00000000 l    df *ABS*	00000000 dfu_ctrl.c
08001b60 l     F .text	00000018 dfuStartFirmware.part.1
200013c0 l     O .bss	00000004 dontStartFirmware
200013c4 l     O .bss	00000400 sector
20000800 l     O .data	00000004 timeLeft
200017c4 l     O .bss	00000004 byteIndex
00000000 l    df *ABS*	00000000 stm32f10x_flash.c
080021e0 g     O .text	0000003c pal_default_config
08000250  w    F .text	00000002 Vector58
08000250  w    F .text	00000002 Vector9C
08000250  w    F .text	00000002 VectorE8
080003c0 g     F .text	00000048 nvicEnableVector
080005d0 g     F .text	00000030 dbg_check_lock_from_isr
08001d00 g     F .text	00000004 FLASH_Unlock
08000e20 g     F .text	00000048 chEvtSignalFlagsI
08001cb0 g     F .text	0000001c dfuStartFirmware
08000250  w    F .text	00000002 VectorAC
08000c30 g     F .text	00000018 chThdExit
080004d0 g     F .text	00000054 chSysTimerHandlerI
08000e70 g     F .text	00000030 chEvtBroadcastFlagsI
08000950 g     F .text	00000050 chSchGoSleepTimeoutS
08000c70 g     F .text	00000100 chMtxLockS
08000560 g     F .text	00000030 dbg_check_lock
08000250  w    F .text	00000002 Vector5C
08000250  w    F .text	00000002 NMIVector
08001af0 g     F .text	00000050 initLed
08001d90 g     F .text	00000068 FLASH_ProgramWord
08001c30 g     F .text	00000078 dfuWriteSector
08001be0 g     F .text	00000050 dfuPushBytes
08000250  w    F .text	00000002 Vector8C
08000250  w    F .text	00000002 VectorDC
08000000 g     O startup	000000ec _vectors
080019d0 g     F .text	000000b8 processCpuIo
08000900 g     F .text	00000050 chSchGoSleepS
200017c8 g       *ABS*	00000000 __heap_base__
08002288 g       .stacks	00000000 _etext
08000ab0 g     F .text	00000088 chThdCreateI
08000530 g     F .text	00000028 dbg_check_enable
08001cd0 g     F .text	0000000c turnCountdownOff
08000250  w    F .text	00000002 VectorC8
08001e00 g     F .text	00000040 FLASH_ErasePage
080009a0 g     F .text	00000068 chSchWakeupS
08001380 g     F .text	0000005c sdIncomingDataI
080010d0 g     F .text	0000004c chOQGetI
08000860 g     F .text	00000018 _scheduler_init
08000b40 g     F .text	00000064 chThdCreateStatic
08000250  w    F .text	00000002 Vector94
08000250  w    F .text	00000002 VectorA8
08000250  w    F .text	00000002 VectorB4
08000880 g     F .text	00000040 chSchReadyI
080000ec g       startup	00000000 __fini_array_end
08000260  w    F .text	00000004 port_halt
20000800 g       .stacks	00000000 __main_thread_stack_end__
08000790 g     F .text	00000018 _vt_init
08000250  w    F .text	00000002 Vector74
08001200 g     F .text	0000001c halInit
20000808 g       .bss	00000000 _bss_start
08000250  w    F .text	00000002 UsageFaultVector
20005000 g       *ABS*	00000000 __heap_end__
08000250  w    F .text	00000002 DebugMonitorVector
08000590 g     F .text	00000038 dbg_check_unlock
08000250  w    F .text	00000002 Vector40
08000140 g     F .text	00000104 ResetHandler
08000fb0 g     F .text	00000090 chIQReadTimeout
08000250  w    F .text	00000002 VectorBC
080002a0 g     F .text	00000034 _port_init
080013e0 g     F .text	00000098 hal_lld_init
08000be0 g     F .text	0000004c chThdExitS
20000914 g     O .bss	00000408 dbg_trace_buffer
08000250  w    F .text	00000002 PendSVVector
08001d20 g     F .text	00000004 FLASH_Lock
080007b0 g     F .text	00000054 chVTSetI
08000250  w    F .text	00000002 Vector64
200017c8 g       .bss	00000000 _bss_end
20000d20 g     O .bss	00000004 dbg_panic_msg
08000130  w    F .text	00000002 _default_exit
080017c0 g     F .text	00000068 _pal_lld_setgroupmode
08000250  w    F .text	00000002 VectorCC
080016a0 g     F .text	00000024 sd_lld_init
08000250  w    F .text	00000002 Vector54
08000250  w    F .text	00000002 Vector98
08001d60 g     F .text	00000022 FLASH_WaitForLastBank1Operation
08000250  w    F .text	00000002 VectorD8
08000250  w    F .text	00000002 Vector24
080006c0 g     F .text	0000002c chDbgCheckClassI
08000d70 g     F .text	00000020 chMtxLock
08001b80 g     F .text	00000020 initDfu
08000a10 g     F .text	0000004c chSchDoReschedule
08000460 g     F .text	0000006c chSysInit
08000bb0 g     F .text	00000030 chThdSleep
08000ed0 g     F .text	0000001a chIQInit
08000250  w    F .text	00000002 Vector84
08000360 g     F .text	0000002a SysTickVector
20000910 g     O .bss	00000004 dbg_isr_cnt
08001480 g     F .text	00000088 stm32_clock_init
08001750 g     F .text	0000006c _pal_lld_init
080012d0 g     F .text	00000004 sdInit
08000250  w    F .text	00000002 BusFaultVector
08000250  w    F .text	00000002 VectorD0
080011d0 g     F .text	00000028 _core_init
08001330 g     F .text	00000048 sdStart
08000250  w    F .text	00000002 VectorE4
08000250  w    F .text	00000002 VectorC0
08000390 g     F .text	00000010 _port_switch
00005000 g       *ABS*	00000000 __ram_size__
08000280 g     F .text	00000012 SVCallVector
08000120  w    F .text	00000002 __late_init
08000780 g     F .text	0000000c chDbgPanic
20000d24 g     O .bss	00000010 vtlist
08000250  w    F .text	00000002 HardFaultVector
080002e0 g     F .text	00000074 _port_irq_epilogue
080006f0 g     F .text	0000002c chDbgCheckClassS
08000680 g     F .text	00000040 dbg_check_leave_isr
08002288 g       *ABS*	00000000 _textdata
08000250  w    F .text	00000002 VectorE0
00000000 g       startup	00000000 _text
08000250  w    F .text	00000002 MemManageVector
080000ec g       startup	00000000 __fini_array_start
080000f0 g     F .text	00000026 main
08000250  w    F .text	00000002 Vector6C
08001ba0 g     F .text	00000038 processDfu
20000d34 g     O .bss	00000020 rlist
08000250  w    F .text	00000002 VectorA0
08000640 g     F .text	00000040 dbg_check_enter_isr
080000ec g       startup	00000000 __init_array_end
08000250  w    F .text	00000002 Vector7C
08000250  w    F .text	00000002 VectorC4
08000c50 g     F .text	0000001c chMtxInit
08000440 g     F .text	00000014 _idle_thread
08001120 g     F .text	000000a4 chOQWriteTimeout
08000250  w    F .text	00000002 VectorB0
08000250  w    F .text	00000002 Vector90
20000d1c g     O .bss	00000004 dbg_lock_cnt
20000000 g       startup	00000000 __ram_start__
080003a0 g     F .text	00000016 _port_thread_start
08000250  w    F .text	00000002 Vector60
08000250  w    F .text	00000002 Vector1C
08000250  w    F .text	00000002 Vector48
20000400 g       .stacks	00000000 __process_stack_base__
08001d10 g     F .text	00000010 FLASH_LockBank1
08000250  w    F .text	00000002 Vector70
08001530 g     F .text	0000016c VectorD4
08000410 g     F .text	00000028 nvicSetSystemHandlerPriority
20000850 g     O .bss	000000c0 _idle_thread_wa
08001040 g     F .text	00000018 chOQInit
08000f40 g     F .text	00000062 chIQGetTimeout
20000800 g       .data	00000000 _data
08000250  w    F .text	00000002 Vector4C
08000250  w    F .text	00000002 Vector80
08000ef0 g     F .text	00000050 chIQPutI
08000270 g     F .text	0000000e _port_switch_from_isr
08000250  w    F .text	00000002 Vector68
08000d90 g     F .text	00000088 chMtxUnlock
08000720 g     F .text	00000014 _trace_init
20000400 g       .stacks	00000000 __main_stack_end__
08000250  w    F .text	00000002 Vector78
20005000 g       *ABS*	00000000 __ram_end__
20000804 g       .data	00000000 _edata
200017c8 g       .bss	00000000 _end
08000810 g     F .text	00000048 chVTResetI
08000250 g     F .text	00000002 _unhandled_exception
080012e0 g     F .text	00000044 sdObjectInit
08000250  w    F .text	00000002 Vector88
20000400 g       .stacks	00000000 __main_thread_stack_base__
08000740 g     F .text	00000040 dbg_trace
080000ec g       startup	00000000 __init_array_start
20000d5c g     O .bss	00000454 SD1
08000a60 g     F .text	00000044 _thread_init
08000250  w    F .text	00000002 Vector50
08001060 g     F .text	0000006a chOQPutTimeout
20000000 g       .stacks	00000000 __main_stack_base__
08000250  w    F .text	00000002 Vector44
08000250  w    F .text	00000002 Vector28
08001840 g     F .text	00000002 boardInit
08000250  w    F .text	00000002 VectorB8
080016d0 g     F .text	00000078 sd_lld_start
00000400 g       *ABS*	00000000 __main_stack_size__
08000600 g     F .text	00000038 dbg_check_unlock_from_isr
20000800 g       .stacks	00000000 __process_stack_end__
08000250  w    F .text	00000002 Vector34
08001b40 g     F .text	00000020 setLeds
08001830 g     F .text	00000004 __early_init
08001d30 g     F .text	00000028 FLASH_GetBank1Status
08000250  w    F .text	00000002 VectorA4
00000400 g       *ABS*	00000000 __process_stack_size__
08001ce0 g     F .text	00000018 FLASH_UnlockBank1
08000250  w    F .text	00000002 Vector20
08001980 g     F .text	0000004c initCpuIo


