
build/digitizer.elf:     file format elf32-littlearm
build/digitizer.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000111

Program Header:
    LOAD off    0x00008000 vaddr 0x08000000 paddr 0x08000000 align 2**15
         filesz 0x000023a4 memsz 0x000023a8 flags rwx
    LOAD off    0x00010800 vaddr 0x20000800 paddr 0x080023a8 align 2**15
         filesz 0x00000004 memsz 0x00000004 flags rw-
    LOAD off    0x00010808 vaddr 0x20000808 paddr 0x080023ac align 2**15
         filesz 0x00000000 memsz 0x00000fc4 flags rw-
    LOAD off    0x00018000 vaddr 0x20000000 paddr 0x20000000 align 2**15
         filesz 0x00000000 memsz 0x00000800 flags rw-
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       000000ec  08000000  08000000  00008000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000022b4  080000f0  080000f0  000080f0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .textalign    00000004  080023a4  080023a4  0000a3a4  2**0
                  ALLOC
  3 .stacks       00000800  20000000  20000000  00018000  2**0
                  ALLOC
  4 .data         00000004  20000800  080023a8  00010800  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .bss          00000fc4  20000808  080023ac  00010808  2**3
                  ALLOC
  6 .debug_abbrev 00005c7d  00000000  00000000  00010804  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000165b9  00000000  00000000  00016481  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000081db  00000000  00000000  0002ca3a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000844a  00000000  00000000  00034c15  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_pubnames 000017d4  00000000  00000000  0003d05f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_pubtypes 00003651  00000000  00000000  0003e833  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_aranges 00000f18  00000000  00000000  00041e84  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00001718  00000000  00000000  00042d9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    000036d5  00000000  00000000  000444b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .comment      00000011  00000000  00000000  00047b89  2**0
                  CONTENTS, READONLY
 16 .ARM.attributes 00000031  00000000  00000000  00047b9a  2**0
                  CONTENTS, READONLY
 17 .debug_frame  000028ac  00000000  00000000  00047bcc  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
080000f0 l    d  .text	00000000 .text
080023a4 l    d  .textalign	00000000 .textalign
20000000 l    d  .stacks	00000000 .stacks
20000800 l    d  .data	00000000 .data
20000808 l    d  .bss	00000000 .bss
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_pubtypes	00000000 .debug_pubtypes
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 vectors.c
00000000 l    df *ABS*	00000000 crt0.c
00000000 l    df *ABS*	00000000 chcore.c
00000000 l    df *ABS*	00000000 chcore_v7m.c
0800020c l       .text	00000000 _port_exit_from_isr
00000000 l    df *ABS*	00000000 nvic.c
00000000 l    df *ABS*	00000000 chsys.c
20000808 l     O .bss	00000048 mainthread.1986
00000000 l    df *ABS*	00000000 chdebug.c
00000000 l    df *ABS*	00000000 chvt.c
00000000 l    df *ABS*	00000000 chschd.c
080008a0 l     F .text	0000003a wakeup
00000000 l    df *ABS*	00000000 chthreads.c
00000000 l    df *ABS*	00000000 chmtx.c
00000000 l    df *ABS*	00000000 chevents.c
00000000 l    df *ABS*	00000000 chqueues.c
08000eb0 l     F .text	0000002c qwait
00000000 l    df *ABS*	00000000 chmemcore.c
20000d54 l     O .bss	00000004 endmem
20000d58 l     O .bss	00000004 nextmem
00000000 l    df *ABS*	00000000 hal.c
00000000 l    df *ABS*	00000000 serial.c
08001230 l     F .text	0000000c putwouldblock
08001240 l     F .text	0000000c getwouldblock
08001250 l     F .text	00000022 getflags
08001280 l     F .text	0000000a readt
08001290 l     F .text	0000000e reads
080012a0 l     F .text	0000000a writet
080012b0 l     F .text	0000000e writes
080012c0 l     F .text	0000000a gett
080012d0 l     F .text	0000000a putt
080022a0 l     O .text	00000024 vmt
00000000 l    df *ABS*	00000000 hal_lld.c
00000000 l    df *ABS*	00000000 serial_lld.c
08001560 l     F .text	00000014 notify1
080022d0 l     O .text	0000000c default_config
00000000 l    df *ABS*	00000000 pal_lld.c
080022e0 l     O .text	00000012 cfgtab.3084
00000000 l    df *ABS*	00000000 board.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 cpu_io.c
08001900 l     F .text	00000008 dfu_run_firmware
08001910 l     F .text	00000034 writeResult
08001950 l     F .text	00000014 writeEom
08001970 l     F .text	00000018 dfu_write_sector
08001990 l     F .text	00000040 firmware_version
080019d0 l     F .text	00000034 hardware_version
08001a10 l     F .text	00000014 dfu_push
08001a30 l     F .text	00000010 set_led
08002340 l     O .text	0000000c serial_cfg
200011b0 l     O .bss	00000001 slash.3450
08002350 l     O .text	00000018 funcs
200011b4 l     O .bss	00000004 out_index.3451
200011b8 l     O .bss	00000020 buffer
200011d8 l     O .bss	00000020 args
00000000 l    df *ABS*	00000000 led_ctrl.c
08001b60 l     F .text	00000074 ledsThread
200011f8 l     O .bss	00000010 mutex
20001208 l     O .bss	00000004 value
20001210 l     O .bss	000001b0 waLeds
200013c0 l     O .bss	00000004 arg.3134
00000000 l    df *ABS*	00000000 dfu_ctrl.c
200013c4 l     O .bss	00000004 dontStartFirmware
200013c8 l     O .bss	00000400 sector
20000800 l     O .data	00000004 timeLeft
200017c8 l     O .bss	00000004 byteIndex
00000000 l    df *ABS*	00000000 stm32f10x_flash.c
00000000 l    df *ABS*	00000000 chlists.c
00000000 l    df *ABS*	00000000 chdynamic.c
00000000 l    df *ABS*	00000000 chregistry.c
00000000 l    df *ABS*	00000000 chsem.c
00000000 l    df *ABS*	00000000 chcond.c
00000000 l    df *ABS*	00000000 chmsg.c
00000000 l    df *ABS*	00000000 chmboxes.c
00000000 l    df *ABS*	00000000 chheap.c
00000000 l    df *ABS*	00000000 chmempools.c
00000000 l    df *ABS*	00000000 test.c
00000000 l    df *ABS*	00000000 testthd.c
00000000 l    df *ABS*	00000000 testsem.c
00000000 l    df *ABS*	00000000 testmtx.c
00000000 l    df *ABS*	00000000 testmsg.c
00000000 l    df *ABS*	00000000 testmbox.c
00000000 l    df *ABS*	00000000 testevt.c
00000000 l    df *ABS*	00000000 testheap.c
00000000 l    df *ABS*	00000000 testpools.c
00000000 l    df *ABS*	00000000 testdyn.c
00000000 l    df *ABS*	00000000 testqueues.c
00000000 l    df *ABS*	00000000 testbmk.c
00000000 l    df *ABS*	00000000 adc.c
00000000 l    df *ABS*	00000000 can.c
00000000 l    df *ABS*	00000000 ext.c
00000000 l    df *ABS*	00000000 gpt.c
00000000 l    df *ABS*	00000000 i2c.c
00000000 l    df *ABS*	00000000 icu.c
00000000 l    df *ABS*	00000000 mac.c
00000000 l    df *ABS*	00000000 pal.c
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 sdc.c
00000000 l    df *ABS*	00000000 spi.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 usb.c
00000000 l    df *ABS*	00000000 tm.c
00000000 l    df *ABS*	00000000 mmc_spi.c
00000000 l    df *ABS*	00000000 serial_usb.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 stm32_dma.c
00000000 l    df *ABS*	00000000 adc_lld.c
00000000 l    df *ABS*	00000000 can_lld.c
00000000 l    df *ABS*	00000000 ext_lld.c
00000000 l    df *ABS*	00000000 gpt_lld.c
00000000 l    df *ABS*	00000000 i2c_lld.c
00000000 l    df *ABS*	00000000 icu_lld.c
00000000 l    df *ABS*	00000000 mac_lld.c
00000000 l    df *ABS*	00000000 pwm_lld.c
00000000 l    df *ABS*	00000000 sdc_lld.c
00000000 l    df *ABS*	00000000 spi_lld.c
00000000 l    df *ABS*	00000000 uart_lld.c
00000000 l    df *ABS*	00000000 usb_lld.c
00000000 l    df *ABS*	00000000 rtc_lld.c
00000000 l    df *ABS*	00000000 evtimer.c
00000000 l    df *ABS*	00000000 syscalls.c
00000000 l    df *ABS*	00000000 iwdg.c
00000000 l    df *ABS*	00000000 iwdg_lld.c
00000000 l    df *ABS*	00000000 misc.c
00000000 l    df *ABS*	00000000 memset.c
08002300 g     O .text	0000003c pal_default_config
080001e0  w    F .text	00000002 Vector58
080001e0  w    F .text	00000002 VectorE8
080001e0  w    F .text	00000002 Vector9C
08000340 g     F .text	0000004a nvicEnableVector
08000560 g     F .text	00000034 dbg_check_lock_from_isr
08001e00 g     F .text	0000001e FLASH_Unlock
08000e10 g     F .text	00000054 chEvtSignalFlagsI
08001db0 g     F .text	00000032 dfuStartFirmware
080001e0  w    F .text	00000002 VectorAC
08000c10 g     F .text	00000016 chThdExit
08000460 g     F .text	00000054 chSysTimerHandlerI
08000e70 g     F .text	00000034 chEvtBroadcastFlagsI
08000930 g     F .text	0000004c chSchGoSleepTimeoutS
08000c50 g     F .text	00000108 chMtxLockS
080004f0 g     F .text	00000030 dbg_check_lock
080001e0  w    F .text	00000002 Vector5C
080001e0  w    F .text	00000002 NMIVector
08001be0 g     F .text	00000058 initLed
08001ea0 g     F .text	0000006a FLASH_ProgramWord
08001d40 g     F .text	0000006c dfuWriteSector
08001cf0 g     F .text	00000044 dfuPushBytes
080001e0  w    F .text	00000002 Vector8C
080001e0  w    F .text	00000002 VectorDC
08000000 g     O startup	000000ec _vectors
08001a90 g     F .text	000000d0 processCpuIo
080008e0 g     F .text	0000004c chSchGoSleepS
200017cc g       *ABS*	00000000 __heap_base__
080023a8 g       *ABS*	00000000 _etext
08000a80 g     F .text	00000094 chThdCreateI
080004c0 g     F .text	0000002c dbg_check_enable
08001df0 g     F .text	0000000e turnCountdownOff
080001e0  w    F .text	00000002 VectorC8
08001f10 g     F .text	00000042 FLASH_ErasePage
08000980 g     F .text	0000005c chSchWakeupS
08001390 g     F .text	0000005c sdIncomingDataI
080010e0 g     F .text	0000004e chOQGetI
08000830 g     F .text	0000001a _scheduler_init
08000b20 g     F .text	00000062 chThdCreateStatic
080001e0  w    F .text	00000002 Vector94
080001e0  w    F .text	00000002 VectorA8
080001e0  w    F .text	00000002 VectorB4
08000850 g     F .text	0000004c chSchReadyI
080000ec g       startup	00000000 __fini_array_end
080001f0  w    F .text	00000004 port_halt
20000800 g       .stacks	00000000 __main_thread_stack_end__
08000750 g     F .text	00000018 _vt_init
080001e0  w    F .text	00000002 Vector74
08001210 g     F .text	0000001c halInit
20000808 g       .bss	00000000 _bss_start
080001e0  w    F .text	00000002 UsageFaultVector
20005000 g       *ABS*	00000000 __heap_end__
080001e0  w    F .text	00000002 DebugMonitorVector
08000520 g     F .text	00000034 dbg_check_unlock
080001e0  w    F .text	00000002 Vector40
08000110 g     F .text	000000c8 ResetHandler
08000fc0 g     F .text	00000090 chIQReadTimeout
080001e0  w    F .text	00000002 VectorBC
08000230 g     F .text	00000032 _port_init
080013f0 g     F .text	000000b6 hal_lld_init
08000bc0 g     F .text	00000050 chThdExitS
20000914 g     O .bss	00000408 dbg_trace_buffer
080001e0  w    F .text	00000002 PendSVVector
08001e20 g     F .text	00000012 FLASH_Lock
08000770 g     F .text	00000068 chVTSetI
080001e0  w    F .text	00000002 Vector64
200017cc g       .bss	00000000 _bss_end
20000d20 g     O .bss	00000004 dbg_panic_msg
08000100  w    F .text	00000002 _default_exit
08001840 g     F .text	00000070 _pal_lld_setgroupmode
080001e0  w    F .text	00000002 VectorCC
08001700 g     F .text	00000028 sd_lld_init
080001e0  w    F .text	00000002 Vector54
080001e0  w    F .text	00000002 Vector98
080001e0  w    F .text	00000002 VectorD8
080001e0  w    F .text	00000002 Vector24
08000660 g     F .text	00000030 chDbgCheckClassI
08000d60 g     F .text	00000020 chMtxLock
08001c70 g     F .text	00000028 initDfu
080009e0 g     F .text	00000048 chSchDoReschedule
080003e0 g     F .text	00000078 chSysInit
08000b90 g     F .text	00000030 chThdSleep
08000ee0 g     F .text	0000001a chIQInit
080001e0  w    F .text	00000002 Vector84
080002e0 g     F .text	00000028 SysTickVector
20000910 g     O .bss	00000004 dbg_isr_cnt
080014b0 g     F .text	000000a8 stm32_clock_init
080017b0 g     F .text	00000082 _pal_lld_init
080012e0 g     F .text	00000008 sdInit
080001e0  w    F .text	00000002 BusFaultVector
080001e0  w    F .text	00000002 VectorD0
080011e0 g     F .text	0000002c _core_init
08001340 g     F .text	0000004c sdStart
08001e70 g     F .text	00000028 FLASH_WaitForLastOperation
080001e0  w    F .text	00000002 VectorE4
080001e0  w    F .text	00000002 VectorC0
08000310 g     F .text	00000010 _port_switch
00005000 g       *ABS*	00000000 __ram_size__
08000210 g     F .text	00000012 SVCallVector
080000f0  w    F .text	00000002 __late_init
08000730 g     F .text	00000012 chDbgPanic
20000d24 g     O .bss	00000010 vtlist
080001e0  w    F .text	00000002 HardFaultVector
08000270 g     F .text	00000070 _port_irq_epilogue
08000690 g     F .text	00000030 chDbgCheckClassS
08000620 g     F .text	00000040 dbg_check_leave_isr
080023a8 g       *ABS*	00000000 _textdata
080001e0  w    F .text	00000002 VectorE0
00000000 g       *ABS*	00000000 _text
080001e0  w    F .text	00000002 MemManageVector
080000ec g       startup	00000000 __fini_array_start
080018d0 g     F .text	0000002a main
080001e0  w    F .text	00000002 Vector6C
08001ca0 g     F .text	0000004c processDfu
20000d34 g     O .bss	00000020 rlist
080001e0  w    F .text	00000002 VectorA0
080005e0 g     F .text	00000040 dbg_check_enter_isr
080000ec g       startup	00000000 __init_array_end
080001e0  w    F .text	00000002 VectorC4
080001e0  w    F .text	00000002 Vector7C
08000c30 g     F .text	0000001c chMtxInit
080003c0 g     F .text	00000014 _idle_thread
08001130 g     F .text	000000a4 chOQWriteTimeout
080001e0  w    F .text	00000002 VectorB0
080001e0  w    F .text	00000002 Vector90
20000d1c g     O .bss	00000004 dbg_lock_cnt
20000000 g       *ABS*	00000000 __ram_start__
08000320 g     F .text	00000016 _port_thread_start
080001e0  w    F .text	00000002 Vector60
080001e0  w    F .text	00000002 Vector1C
080001e0  w    F .text	00000002 Vector48
20000400 g       .stacks	00000000 __process_stack_base__
080001e0  w    F .text	00000002 Vector70
08001580 g     F .text	00000180 VectorD4
08000390 g     F .text	00000030 nvicSetSystemHandlerPriority
20000850 g     O .bss	000000c0 _idle_thread_wa
08001050 g     F .text	00000018 chOQInit
08000f60 g     F .text	00000060 chIQGetTimeout
20000800 g       .data	00000000 _data
080001e0  w    F .text	00000002 Vector4C
080001e0  w    F .text	00000002 Vector80
08000f00 g     F .text	00000054 chIQPutI
08000200 g     F .text	0000000e _port_switch_from_isr
080001e0  w    F .text	00000002 Vector68
08000d80 g     F .text	00000088 chMtxUnlock
080006c0 g     F .text	00000014 _trace_init
20000400 g       .stacks	00000000 __main_stack_end__
080001e0  w    F .text	00000002 Vector78
20005000 g       *ABS*	00000000 __ram_end__
20000804 g       .data	00000000 _edata
200017cc g       *ABS*	00000000 _end
080007e0 g     F .text	00000048 chVTResetI
080001e0 g     F .text	00000002 _unhandled_exception
080012f0 g     F .text	0000004e sdObjectInit
080001e0  w    F .text	00000002 Vector88
20000400 g       .stacks	00000000 __main_thread_stack_base__
080006e0 g     F .text	00000044 dbg_trace
080000ec g       startup	00000000 __init_array_start
20000d5c g     O .bss	00000454 SD1
08000a30 g     F .text	0000004c _thread_init
080001e0  w    F .text	00000002 Vector50
08001070 g     F .text	00000062 chOQPutTimeout
20000000 g       .stacks	00000000 __main_stack_base__
080001e0  w    F .text	00000002 Vector44
080001e0  w    F .text	00000002 Vector28
080018c0 g     F .text	00000002 boardInit
080001e0  w    F .text	00000002 VectorB8
08001730 g     F .text	00000080 sd_lld_start
00000400 g       *ABS*	00000000 __main_stack_size__
080005a0 g     F .text	00000038 dbg_check_unlock_from_isr
20000800 g       .stacks	00000000 __process_stack_end__
080001e0  w    F .text	00000002 Vector34
08001c40 g     F .text	00000022 setLeds
080018b0 g     F .text	00000008 __early_init
08001e40 g     F .text	0000002e FLASH_GetBank1Status
080001e0  w    F .text	00000002 VectorA4
00000400 g       *ABS*	00000000 __process_stack_size__
080001e0  w    F .text	00000002 Vector20
08001a40 g     F .text	00000050 initCpuIo


