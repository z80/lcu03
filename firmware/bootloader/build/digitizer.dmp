
build/digitizer.elf:     file format elf32-littlearm
build/digitizer.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000141

Program Header:
    LOAD off    0x00008000 vaddr 0x08000000 paddr 0x08000000 align 2**15
         filesz 0x00002834 memsz 0x00002838 flags rwx
    LOAD off    0x00010800 vaddr 0x20000800 paddr 0x08002838 align 2**15
         filesz 0x00000004 memsz 0x00000fc8 flags rw-
    LOAD off    0x00018000 vaddr 0x20000000 paddr 0x20000000 align 2**15
         filesz 0x00000000 memsz 0x00000800 flags rw-
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       000000ec  08000000  08000000  00008000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002744  080000f0  080000f0  000080f0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .textalign    00000004  08002834  08002834  0000a834  2**0
                  ALLOC
  3 .stacks       00000800  20000000  20000000  00018000  2**0
                  ALLOC
  4 .data         00000004  20000800  08002838  00010800  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .bss          00000fc0  20000808  08002840  00010804  2**3
                  ALLOC
  6 .debug_info   00009f4d  00000000  00000000  00010804  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002846  00000000  00000000  0001a751  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00004030  00000000  00000000  0001cf97  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 000007e0  00000000  00000000  00020fc7  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000d40  00000000  00000000  000217a7  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00003d12  00000000  00000000  000224e7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00001d3c  00000000  00000000  000261f9  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .comment      00000030  00000000  00000000  00027f35  2**0
                  CONTENTS, READONLY
 14 .ARM.attributes 00000033  00000000  00000000  00027f65  2**0
                  CONTENTS, READONLY
 15 .debug_frame  00001370  00000000  00000000  00027f98  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
080000f0 l    d  .text	00000000 .text
08002834 l    d  .textalign	00000000 .textalign
20000000 l    d  .stacks	00000000 .stacks
20000800 l    d  .data	00000000 .data
20000808 l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 vectors.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 crt0.c
00000000 l    df *ABS*	00000000 chcore.c
00000000 l    df *ABS*	00000000 chcore_v7m.c
0800034c l       .text	00000000 _port_exit_from_isr
00000000 l    df *ABS*	00000000 nvic.c
00000000 l    df *ABS*	00000000 chsys.c
20000808 l     O .bss	00000048 mainthread.4651
00000000 l    df *ABS*	00000000 chdebug.c
00000000 l    df *ABS*	00000000 chvt.c
00000000 l    df *ABS*	00000000 chschd.c
08000a60 l     F .text	00000038 wakeup
00000000 l    df *ABS*	00000000 chthreads.c
00000000 l    df *ABS*	00000000 chmtx.c
00000000 l    df *ABS*	00000000 chevents.c
00000000 l    df *ABS*	00000000 chqueues.c
08001100 l     F .text	0000002c qwait
00000000 l    df *ABS*	00000000 chmemcore.c
20000d54 l     O .bss	00000004 endmem
20000d58 l     O .bss	00000004 nextmem
00000000 l    df *ABS*	00000000 hal.c
00000000 l    df *ABS*	00000000 serial.c
08001470 l     F .text	0000000c putwouldblock
08001480 l     F .text	0000000c getwouldblock
08001490 l     F .text	00000022 getflags
080014c0 l     F .text	00000006 readt
080014d0 l     F .text	0000000a reads
080014e0 l     F .text	00000006 writet
080014f0 l     F .text	0000000a writes
08001500 l     F .text	00000006 gett
08001510 l     F .text	00000006 putt
08002740 l     O .text	00000024 vmt
00000000 l    df *ABS*	00000000 hal_lld.c
00000000 l    df *ABS*	00000000 serial_lld.c
080017a0 l     F .text	00000014 notify1
08002770 l     O .text	0000000c default_config
00000000 l    df *ABS*	00000000 pal_lld.c
08002780 l     O .text	00000012 cfgtab.5749
00000000 l    df *ABS*	00000000 board.c
00000000 l    df *ABS*	00000000 cpu_io.c
08001bf0 l     F .text	00000004 dfu_run_firmware
08001c00 l     F .text	00000038 writeResult
08001c40 l     F .text	00000010 writeEom
08001c50 l     F .text	0000001a dfu_write_sector
08001c70 l     F .text	000000a4 firmware_version
08001d20 l     F .text	0000009a hardware_version
08001dc0 l     F .text	00000016 dfu_push
08001de0 l     F .text	00000012 set_led
080027e0 l     O .text	00000018 funcs
200011b0 l     O .bss	00000020 buffer
200011d0 l     O .bss	00000001 slash.6123
200011d4 l     O .bss	00000004 out_index.6124
200011d8 l     O .bss	00000020 args
00000000 l    df *ABS*	00000000 led_ctrl.c
08001f70 l     F .text	0000006a ledsThread
200011f8 l     O .bss	00000010 mutex
20001208 l     O .bss	00000004 value
20001210 l     O .bss	000001b0 waLeds
00000000 l    df *ABS*	00000000 dfu_ctrl.c
200013c0 l     O .bss	00000004 dontStartFirmware
200013c4 l     O .bss	00000400 sector
20000800 l     O .data	00000004 timeLeft
200017c4 l     O .bss	00000004 byteIndex
00000000 l    df *ABS*	00000000 stm32f10x_flash.c
080027a0 g     O .text	0000003c pal_default_config
08000320  w    F .text	00000002 Vector58
08000320  w    F .text	00000002 VectorE8
08000320  w    F .text	00000002 Vector9C
08000490 g     F .text	0000004a nvicEnableVector
080006e0 g     F .text	0000003a dbg_check_lock_from_isr
08002290 g     F .text	0000001e FLASH_Unlock
08001070 g     F .text	0000004a chEvtSignalFlagsI
08002240 g     F .text	00000034 dfuStartFirmware
08000320  w    F .text	00000002 VectorAC
08000e50 g     F .text	00000018 chThdExit
080005c0 g     F .text	00000054 chSysTimerHandlerI
080010c0 g     F .text	00000032 chEvtBroadcastFlagsI
08000b00 g     F .text	00000052 chSchGoSleepTimeoutS
08000ea0 g     F .text	00000108 chMtxLockS
08000660 g     F .text	00000038 dbg_check_lock
08000320  w    F .text	00000002 Vector5C
08000320  w    F .text	00000002 NMIVector
08001fe0 g     F .text	00000058 initLed
08002340 g     F .text	00000068 FLASH_ProgramWord
080021a0 g     F .text	00000094 dfuWriteSector
08002100 g     F .text	00000098 dfuPushBytes
08000320  w    F .text	00000002 Vector8C
08000320  w    F .text	00000002 VectorDC
08000000 g     O startup	000000ec _vectors
08001e50 g     F .text	00000120 processCpuIo
08000aa0 g     F .text	00000052 chSchGoSleepS
200017c8 g       *ABS*	00000000 __heap_base__
08002838 g       *ABS*	00000000 _etext
08000c70 g     F .text	000000b2 chThdCreateI
08000620 g     F .text	00000032 dbg_check_enable
08002280 g     F .text	0000000e turnCountdownOff
08000320  w    F .text	00000002 VectorC8
080023b0 g     F .text	00000042 FLASH_ErasePage
08000b60 g     F .text	00000062 chSchWakeupS
080015d0 g     F .text	00000060 sdIncomingDataI
08001320 g     F .text	0000004a chOQGetI
080009f0 g     F .text	0000001a _scheduler_init
08000d30 g     F .text	0000008e chThdCreateStatic
08000320  w    F .text	00000002 Vector94
08000320  w    F .text	00000002 VectorA8
08000320  w    F .text	00000002 VectorB4
08000a10 g     F .text	00000050 chSchReadyI
080000ec g       startup	00000000 __fini_array_end
08000330  w    F .text	00000004 port_halt
20000800 g       .stacks	00000000 __main_thread_stack_end__
08000910 g     F .text	00000018 _vt_init
08000320  w    F .text	00000002 Vector74
08001450 g     F .text	0000001e halInit
20000808 g       .bss	00000000 _bss_start
08000320  w    F .text	00000002 UsageFaultVector
20005000 g       *ABS*	00000000 __heap_end__
08000320  w    F .text	00000002 DebugMonitorVector
080006a0 g     F .text	00000040 dbg_check_unlock
08000320  w    F .text	00000002 Vector40
08000140 g     F .text	000001de ResetHandler
08001200 g     F .text	00000090 chIQReadTimeout
08000320  w    F .text	00000002 VectorBC
08000370 g     F .text	00000034 _port_init
08001630 g     F .text	000000b2 hal_lld_init
08000df0 g     F .text	00000052 chThdExitS
20000914 g     O .bss	00000408 dbg_trace_buffer
08000320  w    F .text	00000002 PendSVVector
080022b0 g     F .text	00000012 FLASH_Lock
08000930 g     F .text	0000006a chVTSetI
08000320  w    F .text	00000002 Vector64
200017c8 g       .bss	00000000 _bss_end
20000d20 g     O .bss	00000004 dbg_panic_msg
08000130  w    F .text	00000002 _default_exit
08001a80 g     F .text	00000150 _pal_lld_setgroupmode
08000320  w    F .text	00000002 VectorCC
08001940 g     F .text	00000028 sd_lld_init
08000320  w    F .text	00000002 Vector54
08000320  w    F .text	00000002 Vector98
08000320  w    F .text	00000002 VectorD8
08000320  w    F .text	00000002 Vector24
08000810 g     F .text	00000036 chDbgCheckClassI
08000fb0 g     F .text	00000020 chMtxLock
08002070 g     F .text	00000026 initDfu
08000bd0 g     F .text	0000004e chSchDoReschedule
08000540 g     F .text	00000078 chSysInit
08000dc0 g     F .text	00000030 chThdSleep
08001130 g     F .text	0000001a chIQInit
08000320  w    F .text	00000002 Vector84
08000430 g     F .text	0000002a SysTickVector
20000910 g     O .bss	00000004 dbg_isr_cnt
080016f0 g     F .text	000000a4 stm32_clock_init
080019f0 g     F .text	00000086 _pal_lld_init
08001520 g     F .text	00000004 sdInit
08000320  w    F .text	00000002 BusFaultVector
08000320  w    F .text	00000002 VectorD0
08001420 g     F .text	0000002c _core_init
08001580 g     F .text	0000004e sdStart
08002300 g     F .text	0000003c FLASH_WaitForLastOperation
08000320  w    F .text	00000002 VectorE4
08000320  w    F .text	00000002 VectorC0
08000460 g     F .text	00000010 _port_switch
00005000 g       *ABS*	00000000 __ram_size__
08000350 g     F .text	00000012 SVCallVector
08000120  w    F .text	00000002 __late_init
08000900 g     F .text	0000000e chDbgPanic
20000d24 g     O .bss	00000010 vtlist
08000320  w    F .text	00000002 HardFaultVector
080003b0 g     F .text	0000007e _port_irq_epilogue
08000850 g     F .text	00000034 chDbgCheckClassS
080007c0 g     F .text	00000046 dbg_check_leave_isr
08002838 g       *ABS*	00000000 _textdata
08000320  w    F .text	00000002 VectorE0
00000000 g       *ABS*	00000000 _text
08000320  w    F .text	00000002 MemManageVector
080000ec g       startup	00000000 __fini_array_start
080000f0 g     F .text	0000002a main
08000320  w    F .text	00000002 Vector6C
080020a0 g     F .text	00000052 processDfu
20000d34 g     O .bss	00000020 rlist
08000320  w    F .text	00000002 VectorA0
08000770 g     F .text	00000046 dbg_check_enter_isr
080000ec g       startup	00000000 __init_array_end
08000320  w    F .text	00000002 VectorC4
08000320  w    F .text	00000002 Vector7C
08000e70 g     F .text	00000026 chMtxInit
08000520 g     F .text	00000016 _idle_thread
08001370 g     F .text	000000a4 chOQWriteTimeout
08000320  w    F .text	00000002 VectorB0
08000320  w    F .text	00000002 Vector90
20000d1c g     O .bss	00000004 dbg_lock_cnt
20000000 g       *ABS*	00000000 __ram_start__
08000470 g     F .text	00000016 _port_thread_start
08000320  w    F .text	00000002 Vector60
08000320  w    F .text	00000002 Vector1C
08000320  w    F .text	00000002 Vector48
20000400 g       .stacks	00000000 __process_stack_base__
08000320  w    F .text	00000002 Vector70
080017c0 g     F .text	00000174 VectorD4
080004e0 g     F .text	00000032 nvicSetSystemHandlerPriority
20000850 g     O .bss	000000c0 _idle_thread_wa
08001290 g     F .text	00000018 chOQInit
080011a0 g     F .text	0000005a chIQGetTimeout
20000800 g       .data	00000000 _data
08000320  w    F .text	00000002 Vector4C
08000320  w    F .text	00000002 Vector80
08001150 g     F .text	00000050 chIQPutI
08000340 g     F .text	0000000e _port_switch_from_isr
08000320  w    F .text	00000002 Vector68
08000fd0 g     F .text	0000009a chMtxUnlock
08000890 g     F .text	00000014 _trace_init
20000400 g       .stacks	00000000 __main_stack_end__
08000320  w    F .text	00000002 Vector78
20005000 g       *ABS*	00000000 __ram_end__
20000804 g       .data	00000000 _edata
200017c8 g       *ABS*	00000000 _end
080009a0 g     F .text	0000004e chVTResetI
08000320 g     F .text	00000002 _unhandled_exception
08001530 g     F .text	00000046 sdObjectInit
08000320  w    F .text	00000002 Vector88
20000400 g       .stacks	00000000 __main_thread_stack_base__
080008b0 g     F .text	0000004a dbg_trace
080000ec g       startup	00000000 __init_array_start
20000d5c g     O .bss	00000454 SD1
08000c20 g     F .text	0000004c _thread_init
08000320  w    F .text	00000002 Vector50
080012b0 g     F .text	00000066 chOQPutTimeout
20000000 g       .stacks	00000000 __main_stack_base__
08000320  w    F .text	00000002 Vector44
08000320  w    F .text	00000002 Vector28
08001be0 g     F .text	00000002 boardInit
08000320  w    F .text	00000002 VectorB8
08001970 g     F .text	0000007e sd_lld_start
00000400 g       *ABS*	00000000 __main_stack_size__
08000720 g     F .text	00000042 dbg_check_unlock_from_isr
20000800 g       .stacks	00000000 __process_stack_end__
08000320  w    F .text	00000002 Vector34
08002040 g     F .text	00000022 setLeds
08001bd0 g     F .text	00000004 __early_init
080022d0 g     F .text	0000002a FLASH_GetBank1Status
08000320  w    F .text	00000002 VectorA4
00000400 g       *ABS*	00000000 __process_stack_size__
08000320  w    F .text	00000002 Vector20
08001e00 g     F .text	0000004c initCpuIo


